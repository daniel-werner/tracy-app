{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/idb-wrapper/idbstore.js","webpack:///./src/js/common/app.common.calculations.js","webpack:///./src/js/common/app.common.events.js","webpack:///./src/js/model/app.model.battery.js","webpack:///./src/js/model/app.model.geolocation.js","webpack:///./src/js/model/app.model.network.js","webpack:///./src/js/model/app.model.sync.js","webpack:///./src/js/model/app.model.workout.js","webpack:///./src/js/model/drivers/android/app.drivers.android.battery.js","webpack:///./src/js/model/drivers/android/app.drivers.android.hardware.js","webpack:///./src/js/model/drivers/android/app.drivers.android.network.js","webpack:///./src/js/model/drivers/app.driver.factory.js","webpack:///./src/js/model/drivers/app.drivers.battery.js","webpack:///./src/js/model/drivers/app.drivers.hardware.js","webpack:///./src/js/model/drivers/app.drivers.network.js","webpack:///./src/js/model/drivers/app.drivers.platform.js","webpack:///./src/js/model/drivers/tizen/app.drivers.tizen.battery.js","webpack:///./src/js/model/drivers/tizen/app.drivers.tizen.hardware.js","webpack:///./src/js/model/drivers/tizen/app.drivers.tizen.network.js","webpack:///./src/js/model/models.js","webpack:///./src/js/workout/app.workout.base_workout.js","webpack:///./src/js/workout/app.workout.cycling_workout.js","webpack:///./src/js/workout/app.workout.point.js","webpack:///./src/js/workout/app.workout.running_workout.js","webpack:///./src/tests/spec/SyncModelSpec.js","webpack:///./src/tests/spec/WorkoutModelSpec.js","webpack:///./src/tests/spec/unit/DriverFactorySpec.js","webpack:///./src/tests/spec/unit/WorkoutSpec.js","webpack:///./src/tests/test.js"],"names":["window","app","defineAppCommonCalculations","EARTH_RADIUS","METERS_UNIT","KILOMETERS_UNIT","calculations","common","toDegrees","value","Math","PI","toRadians","formatDistance","distance","toFixed","formatUnit","calculateAngle","start","destination","sLon","longitude","dLon","sLat","latitude","dLat","deltaLon","atan2","log","tan","calculateDistance","acos","sin","cos","raw","formatted","unit","angleFromRotation","angle","calculatePathAngle","partialPath","totalPath","totalAngle","defineAppCommonEvents","events","dispatchEvent","eventName","data","customEvent","CustomEvent","detail","defineAppModelBattery","modelBattery","commonEvents","driver","model","battery","init","defineAppModelGeolocation","GEO_CHECKING_INTERVAL","GEO_CHECKING_COUNTER","modelGeolocation","commonCalculations","geolocation","currentPosition","checkingCounter","isPositionEqual","position","coords","onGetCurrentPositionSuccess","onGetCurrentPositionError","error","console","warn","getGeoPosition","watchPosition","maximumAge","enableHighAccuracy","timeout","getCurrentPosition","navigator","defineAppModelNetwork","modelNetwork","network","checkNetworkType","isNetworkAvailable","getNetworkType","defineAppModelSync","modelSync","modelWorkout","workout","syncUrls","login","upload","sync","bindEvents","addEventListener","e","stopPropagation","workouts","uploadWorkouts","getToken","localStorage","getItem","createAuthHeader","token","header","key","length","loginUrl","uploadUrl","email","password","client","XMLHttpRequest","onreadystatechange","readyState","status","setItem","JSON","parse","response","onerror","open","setRequestHeader","send","getItemsToSync","authHeaders","clear","payload","stringify","IDBStore","require","defineAppModelWorkout","hardwareDriver","workoutDB","isDBready","WORKOUT_TYPE_RUNNING","WORKOUT_TYPE_CYCLING","WORKOUT_STATUS_UNSAVED","WORKOUT_STATUS_SAVED","WORKOUT_STATUS_SYNCED","updateUI","onModelGeolocationPositionAvailable","isActive","point","Point","altitude","timestamp","addPoint","initDatabase","dbVersion","storeName","keyPath","autoIncrement","onStoreReady","type","CyclingWorkout","RunningWorkout","backgroundRunEnable","togglePause","resume","pause","backgroundRunDisable","isHeartRateAvailable","save","onsuccess","id","put","toObject","getList","filter","item","getAll","getWorkout","root","BatteryDriverAndroid","proto","BatteryDriver","bind","_this","document","onBatteryStatus","level","onBatteryLow","prototype","HardwareDriverAndroid","HardwareDriver","cordova","plugins","backgroundMode","on","disableWebViewOptimizations","enable","disable","exit","exitApp","message","NetworkDriverAndroid","NetworkDriver","onNetworkTypeChange","connection","Connection","NONE","networkType","onGetNetworkTypeSuccess","DriverFactory","platform","buildNetworkDriver","networkDriver","Platform","PLATFORM_TIZEN","NetworkDriverTizen","PLATFORM_ANDROID","buildBatteryDriver","batteryDriver","BatteryDriverTizen","buildHardwareDriver","HardwareDriverTizen","NETWORKS","indexOf","PLATFORM_BROWSER","get","tizen","systeminfo","device","addPropertyValueChangeListener","change","isCharging","LOW_BATTERY","errorCallback","power","request","release","application","getCurrentApplication","getPropertyValue","onGetPropertyValueError","WORKOUT_STATE_STOPPED","WORKOUT_STATE_RUNNING","WORKOUT_STATE_PAUSED","WORKOUT_STATE_AUTOPAUSED","BaseWorkout","_points","_distance","_segmentIndex","_state","segment_index","push","points","_getCalculationPoints","calculate","pointA","pointB","calculationPoints","lat","lng","heart_rate","elevation","MPS_TO_KMH","_speed","_calculateDistance","timeDiff","time","_calculateSpeed","segmentIndex","heartRate","MSEC_PER_METER_TO_MIN_PER_KM","_pace","_calculatePace","describe","env","jasmine","getEnv","randomizeTests","beforeEach","done","xmlhttp","waypoints","responseText","driverFactory","runWorkout","doneCallback","delay","repeat","setTimeout","it","expect","hasOwnProperty","toBeTruthy","pauseListener","toEqual","removeEventListener","timeA","timeB","expectedDistance","expectedSpeed","speed","expectedPace","pace"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,QAAQ,IAA4B;AACpC,QAAQ,oCAAO,UAAU;AAAA;AAAA;AAAA;AAAA,oGAAC;AAC1B,KAAK,MAAM,EAIN;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,eAAe,SAAS;AACxB;AACA,eAAe,SAAS;AACxB;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;;AAEA;;AAEA;AACA;AACA,iBAAiB;AACjB,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gDAAgD;AAChD;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA,+DAA+D,IAAI;;AAEnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,SAAS;AAC5B;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,OAAO;AAC1B,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA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","file":"/www/tests/test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/*global window:false, self:false, define:false, module:false */\n\n/**\n * @license IDBWrapper - A cross-browser wrapper for IndexedDB\n * Version 1.7.2\n * Copyright (c) 2011 - 2017 Jens Arps\n * http://jensarps.de/\n *\n * Licensed under the MIT license\n */\n\n(function (name, definition, global) {\n\n    'use strict';\n\n    if (typeof define === 'function') {\n        define(definition);\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = definition();\n    } else {\n        global[name] = definition();\n    }\n})('IDBStore', function () {\n\n    'use strict';\n\n    var defaultErrorHandler = function (error) {\n        throw error;\n    };\n    var defaultSuccessHandler = function () {\n    };\n\n    var defaults = {\n        storeName: 'Store',\n        storePrefix: 'IDBWrapper-',\n        dbVersion: 1,\n        keyPath: 'id',\n        autoIncrement: true,\n        onStoreReady: function () {\n        },\n        onError: defaultErrorHandler,\n        indexes: [],\n        implementationPreference: [\n            'indexedDB',\n            'webkitIndexedDB',\n            'mozIndexedDB',\n            'shimIndexedDB'\n        ]\n    };\n\n    /**\n     *\n     * The IDBStore constructor\n     *\n     * @constructor\n     * @name IDBStore\n     * @version 1.7.2\n     *\n     * @param {Object} [kwArgs] An options object used to configure the store and\n     *  set callbacks\n     * @param {String} [kwArgs.storeName='Store'] The name of the store\n     * @param {String} [kwArgs.storePrefix='IDBWrapper-'] A prefix that is\n     *  internally used to construct the name of the database, which will be\n     *  kwArgs.storePrefix + kwArgs.storeName\n     * @param {Number} [kwArgs.dbVersion=1] The version of the store\n     * @param {String} [kwArgs.keyPath='id'] The key path to use. If you want to\n     *  setup IDBWrapper to work with out-of-line keys, you need to set this to\n     *  `null`\n     * @param {Boolean} [kwArgs.autoIncrement=true] If set to true, IDBStore will\n     *  automatically make sure a unique keyPath value is present on each object\n     *  that is stored.\n     * @param {Function} [kwArgs.onStoreReady] A callback to be called when the\n     *  store is ready to be used.\n     * @param {Function} [kwArgs.onError=throw] A callback to be called when an\n     *  error occurred during instantiation of the store.\n     * @param {Array} [kwArgs.indexes=[]] An array of indexData objects\n     *  defining the indexes to use with the store. For every index to be used\n     *  one indexData object needs to be passed in the array.\n     *  An indexData object is defined as follows:\n     * @param {Object} [kwArgs.indexes.indexData] An object defining the index to\n     *  use\n     * @param {String} kwArgs.indexes.indexData.name The name of the index\n     * @param {String} [kwArgs.indexes.indexData.keyPath] The key path of the index\n     * @param {Boolean} [kwArgs.indexes.indexData.unique] Whether the index is unique\n     * @param {Boolean} [kwArgs.indexes.indexData.multiEntry] Whether the index is multi entry\n     * @param {Array} [kwArgs.implementationPreference=['indexedDB','webkitIndexedDB','mozIndexedDB','shimIndexedDB']] An array of strings naming implementations to be used, in order or preference\n     * @param {Function} [onStoreReady] A callback to be called when the store\n     * is ready to be used.\n     * @example\n     // create a store for customers with an additional index over the\n     // `lastname` property.\n     var myCustomerStore = new IDBStore({\n         dbVersion: 1,\n         storeName: 'customer-index',\n         keyPath: 'customerid',\n         autoIncrement: true,\n         onStoreReady: populateTable,\n         indexes: [\n             { name: 'lastname', keyPath: 'lastname', unique: false, multiEntry: false }\n         ]\n     });\n     * @example\n     // create a generic store\n     var myCustomerStore = new IDBStore({\n         storeName: 'my-data-store',\n         onStoreReady: function(){\n             // start working with the store.\n         }\n     });\n     */\n    var IDBStore = function (kwArgs, onStoreReady) {\n\n        if (typeof onStoreReady == 'undefined' && typeof kwArgs == 'function') {\n            onStoreReady = kwArgs;\n        }\n        if (Object.prototype.toString.call(kwArgs) != '[object Object]') {\n            kwArgs = {};\n        }\n\n        for (var key in defaults) {\n            this[key] = typeof kwArgs[key] != 'undefined' ? kwArgs[key] : defaults[key];\n        }\n\n        this.dbName = this.storePrefix + this.storeName;\n        this.dbVersion = parseInt(this.dbVersion, 10) || 1;\n\n        onStoreReady && (this.onStoreReady = onStoreReady);\n\n        var env = typeof window == 'object' ? window : self;\n        var availableImplementations = this.implementationPreference.filter(function (implName) {\n            return implName in env;\n        });\n        this.implementation = availableImplementations[0];\n        this.idb = env[this.implementation];\n        this.keyRange = env.IDBKeyRange || env.webkitIDBKeyRange || env.mozIDBKeyRange;\n\n        this.consts = {\n            'READ_ONLY': 'readonly',\n            'READ_WRITE': 'readwrite',\n            'VERSION_CHANGE': 'versionchange',\n            'NEXT': 'next',\n            'NEXT_NO_DUPLICATE': 'nextunique',\n            'PREV': 'prev',\n            'PREV_NO_DUPLICATE': 'prevunique'\n        };\n\n        this.openDB();\n    };\n\n    /** @lends IDBStore.prototype */\n    var proto = {\n\n        /**\n         * A pointer to the IDBStore ctor\n         *\n         * @private\n         * @type {Function}\n         * @constructs\n         */\n        constructor: IDBStore,\n\n        /**\n         * The version of IDBStore\n         *\n         * @type {String}\n         */\n        version: '1.7.2',\n\n        /**\n         * A reference to the IndexedDB object\n         *\n         * @type {IDBDatabase}\n         */\n        db: null,\n\n        /**\n         * The full name of the IndexedDB used by IDBStore, composed of\n         * this.storePrefix + this.storeName\n         *\n         * @type {String}\n         */\n        dbName: null,\n\n        /**\n         * The version of the IndexedDB used by IDBStore\n         *\n         * @type {Number}\n         */\n        dbVersion: null,\n\n        /**\n         * A reference to the objectStore used by IDBStore\n         *\n         * @type {IDBObjectStore}\n         */\n        store: null,\n\n        /**\n         * The store name\n         *\n         * @type {String}\n         */\n        storeName: null,\n\n        /**\n         * The prefix to prepend to the store name\n         *\n         * @type {String}\n         */\n        storePrefix: null,\n\n        /**\n         * The key path\n         *\n         * @type {String}\n         */\n        keyPath: null,\n\n        /**\n         * Whether IDBStore uses autoIncrement\n         *\n         * @type {Boolean}\n         */\n        autoIncrement: null,\n\n        /**\n         * The indexes used by IDBStore\n         *\n         * @type {Array}\n         */\n        indexes: null,\n\n        /**\n         * The implemantations to try to use, in order of preference\n         *\n         * @type {Array}\n         */\n        implementationPreference: null,\n\n        /**\n         * The actual implementation being used\n         *\n         * @type {String}\n         */\n        implementation: '',\n\n        /**\n         * The callback to be called when the store is ready to be used\n         *\n         * @type {Function}\n         */\n        onStoreReady: null,\n\n        /**\n         * The callback to be called if an error occurred during instantiation\n         * of the store\n         *\n         * @type {Function}\n         */\n        onError: null,\n\n        /**\n         * The internal insertID counter\n         *\n         * @type {Number}\n         * @private\n         */\n        _insertIdCount: 0,\n\n        /**\n         * Opens an IndexedDB; called by the constructor.\n         *\n         * Will check if versions match and compare provided index configuration\n         * with existing ones, and update indexes if necessary.\n         *\n         * Will call this.onStoreReady() if everything went well and the store\n         * is ready to use, and this.onError() is something went wrong.\n         *\n         * @private\n         *\n         */\n        openDB: function () {\n\n            var openRequest = this.idb.open(this.dbName, this.dbVersion);\n            var preventSuccessCallback = false;\n\n            openRequest.onerror = function (errorEvent) {\n\n                if (hasVersionError(errorEvent)) {\n                    this.onError(new Error('The version number provided is lower than the existing one.'));\n                } else {\n                    var error;\n\n                    if (errorEvent.target.error) {\n                        error = errorEvent.target.error;\n                    } else {\n                        var errorMessage = 'IndexedDB unknown error occurred when opening DB ' + this.dbName + ' version ' + this.dbVersion;\n                        if ('errorCode' in errorEvent.target) {\n                            errorMessage += ' with error code ' + errorEvent.target.errorCode;\n                        }\n                        error = new Error(errorMessage);\n                    }\n\n                    this.onError(error);\n                }\n            }.bind(this);\n\n            openRequest.onsuccess = function (event) {\n\n                if (preventSuccessCallback) {\n                    return;\n                }\n\n                if (this.db) {\n                    this.onStoreReady();\n                    return;\n                }\n\n                this.db = event.target.result;\n\n                if (typeof this.db.version == 'string') {\n                    this.onError(new Error('The IndexedDB implementation in this browser is outdated. Please upgrade your browser.'));\n                    return;\n                }\n\n                if (!this.db.objectStoreNames.contains(this.storeName)) {\n                    // We should never ever get here.\n                    // Lets notify the user anyway.\n                    this.onError(new Error('Object store couldn\\'t be created.'));\n                    return;\n                }\n\n                var emptyTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n                this.store = emptyTransaction.objectStore(this.storeName);\n\n                // check indexes\n                var existingIndexes = Array.prototype.slice.call(this.getIndexList());\n                this.indexes.forEach(function (indexData) {\n                    var indexName = indexData.name;\n\n                    if (!indexName) {\n                        preventSuccessCallback = true;\n                        this.onError(new Error('Cannot create index: No index name given.'));\n                        return;\n                    }\n\n                    this.normalizeIndexData(indexData);\n\n                    if (this.hasIndex(indexName)) {\n                        // check if it complies\n                        var actualIndex = this.store.index(indexName);\n                        var complies = this.indexComplies(actualIndex, indexData);\n                        if (!complies) {\n                            preventSuccessCallback = true;\n                            this.onError(new Error('Cannot modify index \"' + indexName + '\" for current version. Please bump version number to ' + ( this.dbVersion + 1 ) + '.'));\n                        }\n\n                        existingIndexes.splice(existingIndexes.indexOf(indexName), 1);\n                    } else {\n                        preventSuccessCallback = true;\n                        this.onError(new Error('Cannot create new index \"' + indexName + '\" for current version. Please bump version number to ' + ( this.dbVersion + 1 ) + '.'));\n                    }\n\n                }, this);\n\n                if (existingIndexes.length) {\n                    preventSuccessCallback = true;\n                    this.onError(new Error('Cannot delete index(es) \"' + existingIndexes.toString() + '\" for current version. Please bump version number to ' + ( this.dbVersion + 1 ) + '.'));\n                }\n\n                preventSuccessCallback || this.onStoreReady();\n            }.bind(this);\n\n            openRequest.onupgradeneeded = function (/* IDBVersionChangeEvent */ event) {\n\n                this.db = event.target.result;\n\n                if (this.db.objectStoreNames.contains(this.storeName)) {\n                    this.store = event.target.transaction.objectStore(this.storeName);\n                } else {\n                    var optionalParameters = {autoIncrement: this.autoIncrement};\n                    if (this.keyPath !== null) {\n                        optionalParameters.keyPath = this.keyPath;\n                    }\n                    this.store = this.db.createObjectStore(this.storeName, optionalParameters);\n                }\n\n                var existingIndexes = Array.prototype.slice.call(this.getIndexList());\n                this.indexes.forEach(function (indexData) {\n                    var indexName = indexData.name;\n\n                    if (!indexName) {\n                        preventSuccessCallback = true;\n                        this.onError(new Error('Cannot create index: No index name given.'));\n                    }\n\n                    this.normalizeIndexData(indexData);\n\n                    if (this.hasIndex(indexName)) {\n                        // check if it complies\n                        var actualIndex = this.store.index(indexName);\n                        var complies = this.indexComplies(actualIndex, indexData);\n                        if (!complies) {\n                            // index differs, need to delete and re-create\n                            this.store.deleteIndex(indexName);\n                            this.store.createIndex(indexName, indexData.keyPath, {\n                                unique: indexData.unique,\n                                multiEntry: indexData.multiEntry\n                            });\n                        }\n\n                        existingIndexes.splice(existingIndexes.indexOf(indexName), 1);\n                    } else {\n                        this.store.createIndex(indexName, indexData.keyPath, {\n                            unique: indexData.unique,\n                            multiEntry: indexData.multiEntry\n                        });\n                    }\n\n                }, this);\n\n                if (existingIndexes.length) {\n                    existingIndexes.forEach(function (_indexName) {\n                        this.store.deleteIndex(_indexName);\n                    }, this);\n                }\n\n            }.bind(this);\n        },\n\n        /**\n         * Deletes the database used for this store if the IDB implementations\n         * provides that functionality.\n         *\n         * @param {Function} [onSuccess] A callback that is called if deletion\n         *  was successful.\n         * @param {Function} [onError] A callback that is called if deletion\n         *  failed.\n         */\n        deleteDatabase: function (onSuccess, onError) {\n            if (this.idb.deleteDatabase) {\n                this.db.close();\n                var deleteRequest = this.idb.deleteDatabase(this.dbName);\n                deleteRequest.onsuccess = onSuccess;\n                deleteRequest.onerror = onError;\n            } else {\n                onError(new Error('Browser does not support IndexedDB deleteDatabase!'));\n            }\n        },\n\n        /*********************\n         * data manipulation *\n         *********************/\n\n        /**\n         * Puts an object into the store. If an entry with the given id exists,\n         * it will be overwritten. This method has a different signature for inline\n         * keys and out-of-line keys; please see the examples below.\n         *\n         * @param {*} [key] The key to store. This is only needed if IDBWrapper\n         *  is set to use out-of-line keys. For inline keys - the default scenario -\n         *  this can be omitted.\n         * @param {Object} value The data object to store.\n         * @param {Function} [onSuccess] A callback that is called if insertion\n         *  was successful.\n         * @param {Function} [onError] A callback that is called if insertion\n         *  failed.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         * @example\n         // Storing an object, using inline keys (the default scenario):\n         var myCustomer = {\n             customerid: 2346223,\n             lastname: 'Doe',\n             firstname: 'John'\n         };\n         myCustomerStore.put(myCustomer, mySuccessHandler, myErrorHandler);\n         // Note that passing success- and error-handlers is optional.\n         * @example\n         // Storing an object, using out-of-line keys:\n         var myCustomer = {\n             lastname: 'Doe',\n             firstname: 'John'\n         };\n         myCustomerStore.put(2346223, myCustomer, mySuccessHandler, myErrorHandler);\n         // Note that passing success- and error-handlers is optional.\n         */\n        put: function (key, value, onSuccess, onError) {\n            if (this.keyPath !== null) {\n                onError = onSuccess;\n                onSuccess = value;\n                value = key;\n            }\n            onError || (onError = defaultErrorHandler);\n            onSuccess || (onSuccess = defaultSuccessHandler);\n\n            var hasSuccess = false,\n                result = null,\n                putRequest;\n\n            var putTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n            putTransaction.oncomplete = function () {\n                var callback = hasSuccess ? onSuccess : onError;\n                callback(result);\n            };\n            putTransaction.onabort = onError;\n            putTransaction.onerror = onError;\n\n            if (this.keyPath !== null) { // in-line keys\n                this._addIdPropertyIfNeeded(value);\n                putRequest = putTransaction.objectStore(this.storeName).put(value);\n            } else { // out-of-line keys\n                putRequest = putTransaction.objectStore(this.storeName).put(value, key);\n            }\n            putRequest.onsuccess = function (event) {\n                hasSuccess = true;\n                result = event.target.result;\n            };\n            putRequest.onerror = onError;\n\n            return putTransaction;\n        },\n\n        /**\n         * Retrieves an object from the store. If no entry exists with the given id,\n         * the success handler will be called with null as first and only argument.\n         *\n         * @param {*} key The id of the object to fetch.\n         * @param {Function} [onSuccess] A callback that is called if fetching\n         *  was successful. Will receive the object as only argument.\n         * @param {Function} [onError] A callback that will be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        get: function (key, onSuccess, onError) {\n            onError || (onError = defaultErrorHandler);\n            onSuccess || (onSuccess = defaultSuccessHandler);\n\n            var hasSuccess = false,\n                result = null;\n\n            var getTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n            getTransaction.oncomplete = function () {\n                var callback = hasSuccess ? onSuccess : onError;\n                callback(result);\n            };\n            getTransaction.onabort = onError;\n            getTransaction.onerror = onError;\n            var getRequest = getTransaction.objectStore(this.storeName).get(key);\n            getRequest.onsuccess = function (event) {\n                hasSuccess = true;\n                result = event.target.result;\n            };\n            getRequest.onerror = onError;\n\n            return getTransaction;\n        },\n\n        /**\n         * Removes an object from the store.\n         *\n         * @param {*} key The id of the object to remove.\n         * @param {Function} [onSuccess] A callback that is called if the removal\n         *  was successful.\n         * @param {Function} [onError] A callback that will be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        remove: function (key, onSuccess, onError) {\n            onError || (onError = defaultErrorHandler);\n            onSuccess || (onSuccess = defaultSuccessHandler);\n\n            var hasSuccess = false,\n                result = null;\n\n            var removeTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n            removeTransaction.oncomplete = function () {\n                var callback = hasSuccess ? onSuccess : onError;\n                callback(result);\n            };\n            removeTransaction.onabort = onError;\n            removeTransaction.onerror = onError;\n\n            var deleteRequest = removeTransaction.objectStore(this.storeName)['delete'](key);\n            deleteRequest.onsuccess = function (event) {\n                hasSuccess = true;\n                result = event.target.result;\n            };\n            deleteRequest.onerror = onError;\n\n            return removeTransaction;\n        },\n\n        /**\n         * Runs a batch of put and/or remove operations on the store.\n         *\n         * @param {Array} dataArray An array of objects containing the operation to run\n         *  and the data object (for put operations).\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        batch: function (dataArray, onSuccess, onError) {\n            onError || (onError = defaultErrorHandler);\n            onSuccess || (onSuccess = defaultSuccessHandler);\n\n            if (Object.prototype.toString.call(dataArray) != '[object Array]') {\n                onError(new Error('dataArray argument must be of type Array.'));\n            } else if (dataArray.length === 0) {\n                return onSuccess(true);\n            }\n\n            var count = dataArray.length;\n            var called = false;\n            var hasSuccess = false;\n\n            var batchTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n            batchTransaction.oncomplete = function () {\n                var callback = hasSuccess ? onSuccess : onError;\n                callback(hasSuccess);\n            };\n            batchTransaction.onabort = onError;\n            batchTransaction.onerror = onError;\n\n\n            var onItemSuccess = function () {\n                count--;\n                if (count === 0 && !called) {\n                    called = true;\n                    hasSuccess = true;\n                }\n            };\n\n            dataArray.forEach(function (operation) {\n                var type = operation.type;\n                var key = operation.key;\n                var value = operation.value;\n\n                var onItemError = function (err) {\n                    batchTransaction.abort();\n                    if (!called) {\n                        called = true;\n                        onError(err, type, key);\n                    }\n                };\n\n                if (type == 'remove') {\n                    var deleteRequest = batchTransaction.objectStore(this.storeName)['delete'](key);\n                    deleteRequest.onsuccess = onItemSuccess;\n                    deleteRequest.onerror = onItemError;\n                } else if (type == 'put') {\n                    var putRequest;\n                    if (this.keyPath !== null) { // in-line keys\n                        this._addIdPropertyIfNeeded(value);\n                        putRequest = batchTransaction.objectStore(this.storeName).put(value);\n                    } else { // out-of-line keys\n                        putRequest = batchTransaction.objectStore(this.storeName).put(value, key);\n                    }\n                    putRequest.onsuccess = onItemSuccess;\n                    putRequest.onerror = onItemError;\n                }\n            }, this);\n\n            return batchTransaction;\n        },\n\n        /**\n         * Takes an array of objects and stores them in a single transaction.\n         *\n         * @param {Array} dataArray An array of objects to store\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        putBatch: function (dataArray, onSuccess, onError) {\n            var batchData = dataArray.map(function (item) {\n                return {type: 'put', value: item};\n            });\n\n            return this.batch(batchData, onSuccess, onError);\n        },\n\n        /**\n         * Like putBatch, takes an array of objects and stores them in a single\n         * transaction, but allows processing of the result values.  Returns the\n         * processed records containing the key for newly created records to the\n         * onSuccess calllback instead of only returning true or false for success.\n         * In addition, added the option for the caller to specify a key field that\n         * should be set to the newly created key.\n         *\n         * @param {Array} dataArray An array of objects to store\n         * @param {Object} [options] An object containing optional options\n         * @param {String} [options.keyField=this.keyPath] Specifies a field in the record to update\n         *  with the auto-incrementing key. Defaults to the store's keyPath.\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         *\n         */\n        upsertBatch: function (dataArray, options, onSuccess, onError) {\n            // handle `dataArray, onSuccess, onError` signature\n            if (typeof options == 'function') {\n                onSuccess = options;\n                onError = onSuccess;\n                options = {};\n            }\n\n            onError || (onError = defaultErrorHandler);\n            onSuccess || (onSuccess = defaultSuccessHandler);\n            options || (options = {});\n\n            if (Object.prototype.toString.call(dataArray) != '[object Array]') {\n                onError(new Error('dataArray argument must be of type Array.'));\n            }\n\n            var keyField = options.keyField || this.keyPath;\n            var count = dataArray.length;\n            var called = false;\n            var hasSuccess = false;\n            var index = 0; // assume success callbacks are executed in order\n\n            var batchTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n            batchTransaction.oncomplete = function () {\n                if (hasSuccess) {\n                    onSuccess(dataArray);\n                } else {\n                    onError(false);\n                }\n            };\n            batchTransaction.onabort = onError;\n            batchTransaction.onerror = onError;\n\n            var onItemSuccess = function (event) {\n                var record = dataArray[index++];\n                record[keyField] = event.target.result;\n\n                count--;\n                if (count === 0 && !called) {\n                    called = true;\n                    hasSuccess = true;\n                }\n            };\n\n            dataArray.forEach(function (record) {\n                var key = record.key;\n\n                var onItemError = function (err) {\n                    batchTransaction.abort();\n                    if (!called) {\n                        called = true;\n                        onError(err);\n                    }\n                };\n\n                var putRequest;\n                if (this.keyPath !== null) { // in-line keys\n                    this._addIdPropertyIfNeeded(record);\n                    putRequest = batchTransaction.objectStore(this.storeName).put(record);\n                } else { // out-of-line keys\n                    putRequest = batchTransaction.objectStore(this.storeName).put(record, key);\n                }\n                putRequest.onsuccess = onItemSuccess;\n                putRequest.onerror = onItemError;\n            }, this);\n\n            return batchTransaction;\n        },\n\n        /**\n         * Takes an array of keys and removes matching objects in a single\n         * transaction.\n         *\n         * @param {Array} keyArray An array of keys to remove\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        removeBatch: function (keyArray, onSuccess, onError) {\n            var batchData = keyArray.map(function (key) {\n                return {type: 'remove', key: key};\n            });\n\n            return this.batch(batchData, onSuccess, onError);\n        },\n\n        /**\n         * Takes an array of keys and fetches matching objects\n         *\n         * @param {Array} keyArray An array of keys identifying the objects to fetch\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @param {String} [arrayType='sparse'] The type of array to pass to the\n         *  success handler. May be one of 'sparse', 'dense' or 'skip'. Defaults to\n         *  'sparse'. This parameter specifies how to handle the situation if a get\n         *  operation did not throw an error, but there was no matching object in\n         *  the database. In most cases, 'sparse' provides the most desired\n         *  behavior. See the examples for details.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         * @example\n         // given that there are two objects in the database with the keypath\n         // values 1 and 2, and the call looks like this:\n         myStore.getBatch([1, 5, 2], onError, function (data) { … }, arrayType);\n\n         // this is what the `data` array will be like:\n\n         // arrayType == 'sparse':\n         // data is a sparse array containing two entries and having a length of 3:\n         [Object, 2: Object]\n         0: Object\n         2: Object\n         length: 3\n         // calling forEach on data will result in the callback being called two\n         // times, with the index parameter matching the index of the key in the\n         // keyArray.\n\n         // arrayType == 'dense':\n         // data is a dense array containing three entries and having a length of 3,\n         // where data[1] is of type undefined:\n         [Object, undefined, Object]\n         0: Object\n         1: undefined\n         2: Object\n         length: 3\n         // calling forEach on data will result in the callback being called three\n         // times, with the index parameter matching the index of the key in the\n         // keyArray, but the second call will have undefined as first argument.\n\n         // arrayType == 'skip':\n         // data is a dense array containing two entries and having a length of 2:\n         [Object, Object]\n         0: Object\n         1: Object\n         length: 2\n         // calling forEach on data will result in the callback being called two\n         // times, with the index parameter not matching the index of the key in the\n         // keyArray.\n         */\n        getBatch: function (keyArray, onSuccess, onError, arrayType) {\n            onError || (onError = defaultErrorHandler);\n            onSuccess || (onSuccess = defaultSuccessHandler);\n            arrayType || (arrayType = 'sparse');\n\n            if (Object.prototype.toString.call(keyArray) != '[object Array]') {\n                onError(new Error('keyArray argument must be of type Array.'));\n            } else if (keyArray.length === 0) {\n                return onSuccess([]);\n            }\n\n            var data = [];\n            var count = keyArray.length;\n            var called = false;\n            var hasSuccess = false;\n            var result = null;\n\n            var batchTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n            batchTransaction.oncomplete = function () {\n                var callback = hasSuccess ? onSuccess : onError;\n                callback(result);\n            };\n            batchTransaction.onabort = onError;\n            batchTransaction.onerror = onError;\n\n            var onItemSuccess = function (event) {\n                if (event.target.result || arrayType == 'dense') {\n                    data.push(event.target.result);\n                } else if (arrayType == 'sparse') {\n                    data.length++;\n                }\n                count--;\n                if (count === 0) {\n                    called = true;\n                    hasSuccess = true;\n                    result = data;\n                }\n            };\n\n            keyArray.forEach(function (key) {\n\n                var onItemError = function (err) {\n                    called = true;\n                    result = err;\n                    onError(err);\n                    batchTransaction.abort();\n                };\n\n                var getRequest = batchTransaction.objectStore(this.storeName).get(key);\n                getRequest.onsuccess = onItemSuccess;\n                getRequest.onerror = onItemError;\n\n            }, this);\n\n            return batchTransaction;\n        },\n\n        /**\n         * Fetches all entries in the store.\n         *\n         * @param {Function} [onSuccess] A callback that is called if the operation\n         *  was successful. Will receive an array of objects.\n         * @param {Function} [onError] A callback that will be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        getAll: function (onSuccess, onError) {\n            onError || (onError = defaultErrorHandler);\n            onSuccess || (onSuccess = defaultSuccessHandler);\n            var getAllTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n            var store = getAllTransaction.objectStore(this.storeName);\n            if (store.getAll) {\n                this._getAllNative(getAllTransaction, store, onSuccess, onError);\n            } else {\n                this._getAllCursor(getAllTransaction, store, onSuccess, onError);\n            }\n\n            return getAllTransaction;\n        },\n\n        /**\n         * Implements getAll for IDB implementations that have a non-standard\n         * getAll() method.\n         *\n         * @param {IDBTransaction} getAllTransaction An open READ transaction.\n         * @param {IDBObjectStore} store A reference to the store.\n         * @param {Function} onSuccess A callback that will be called if the\n         *  operation was successful.\n         * @param {Function} onError A callback that will be called if an\n         *  error occurred during the operation.\n         * @private\n         */\n        _getAllNative: function (getAllTransaction, store, onSuccess, onError) {\n            var hasSuccess = false,\n                result = null;\n\n            getAllTransaction.oncomplete = function () {\n                var callback = hasSuccess ? onSuccess : onError;\n                callback(result);\n            };\n            getAllTransaction.onabort = onError;\n            getAllTransaction.onerror = onError;\n\n            var getAllRequest = store.getAll();\n            getAllRequest.onsuccess = function (event) {\n                hasSuccess = true;\n                result = event.target.result;\n            };\n            getAllRequest.onerror = onError;\n        },\n\n        /**\n         * Implements getAll for IDB implementations that do not have a getAll()\n         * method.\n         *\n         * @param {IDBTransaction} getAllTransaction An open READ transaction.\n         * @param {IDBObjectStore} store A reference to the store.\n         * @param {Function} onSuccess A callback that will be called if the\n         *  operation was successful.\n         * @param {Function} onError A callback that will be called if an\n         *  error occurred during the operation.\n         * @private\n         */\n        _getAllCursor: function (getAllTransaction, store, onSuccess, onError) {\n            var all = [],\n                hasSuccess = false,\n                result = null;\n\n            getAllTransaction.oncomplete = function () {\n                var callback = hasSuccess ? onSuccess : onError;\n                callback(result);\n            };\n            getAllTransaction.onabort = onError;\n            getAllTransaction.onerror = onError;\n\n            var cursorRequest = store.openCursor();\n            cursorRequest.onsuccess = function (event) {\n                var cursor = event.target.result;\n                if (cursor) {\n                    all.push(cursor.value);\n                    cursor['continue']();\n                }\n                else {\n                    hasSuccess = true;\n                    result = all;\n                }\n            };\n            cursorRequest.onError = onError;\n        },\n\n        /**\n         * Clears the store, i.e. deletes all entries in the store.\n         *\n         * @param {Function} [onSuccess] A callback that will be called if the\n         *  operation was successful.\n         * @param {Function} [onError] A callback that will be called if an\n         *  error occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        clear: function (onSuccess, onError) {\n            onError || (onError = defaultErrorHandler);\n            onSuccess || (onSuccess = defaultSuccessHandler);\n\n            var hasSuccess = false,\n                result = null;\n\n            var clearTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n            clearTransaction.oncomplete = function () {\n                var callback = hasSuccess ? onSuccess : onError;\n                callback(result);\n            };\n            clearTransaction.onabort = onError;\n            clearTransaction.onerror = onError;\n\n            var clearRequest = clearTransaction.objectStore(this.storeName).clear();\n            clearRequest.onsuccess = function (event) {\n                hasSuccess = true;\n                result = event.target.result;\n            };\n            clearRequest.onerror = onError;\n\n            return clearTransaction;\n        },\n\n        /**\n         * Checks if an id property needs to present on a object and adds one if\n         * necessary.\n         *\n         * @param {Object} dataObj The data object that is about to be stored\n         * @private\n         */\n        _addIdPropertyIfNeeded: function (dataObj) {\n            if (typeof dataObj[this.keyPath] == 'undefined') {\n                dataObj[this.keyPath] = this._insertIdCount++ + Date.now();\n            }\n        },\n\n        /************\n         * indexing *\n         ************/\n\n        /**\n         * Returns a DOMStringList of index names of the store.\n         *\n         * @return {DOMStringList} The list of index names\n         */\n        getIndexList: function () {\n            return this.store.indexNames;\n        },\n\n        /**\n         * Checks if an index with the given name exists in the store.\n         *\n         * @param {String} indexName The name of the index to look for\n         * @return {Boolean} Whether the store contains an index with the given name\n         */\n        hasIndex: function (indexName) {\n            return this.store.indexNames.contains(indexName);\n        },\n\n        /**\n         * Normalizes an object containing index data and assures that all\n         * properties are set.\n         *\n         * @param {Object} indexData The index data object to normalize\n         * @param {String} indexData.name The name of the index\n         * @param {String} [indexData.keyPath] The key path of the index\n         * @param {Boolean} [indexData.unique] Whether the index is unique\n         * @param {Boolean} [indexData.multiEntry] Whether the index is multi entry\n         */\n        normalizeIndexData: function (indexData) {\n            indexData.keyPath = indexData.keyPath || indexData.name;\n            indexData.unique = !!indexData.unique;\n            indexData.multiEntry = !!indexData.multiEntry;\n        },\n\n        /**\n         * Checks if an actual index complies with an expected index.\n         *\n         * @param {IDBIndex} actual The actual index found in the store\n         * @param {Object} expected An Object describing an expected index\n         * @return {Boolean} Whether both index definitions are identical\n         */\n        indexComplies: function (actual, expected) {\n            var complies = ['keyPath', 'unique', 'multiEntry'].every(function (key) {\n                // IE10 returns undefined for no multiEntry\n                if (key == 'multiEntry' && actual[key] === undefined && expected[key] === false) {\n                    return true;\n                }\n                // Compound keys\n                if (key == 'keyPath' && Object.prototype.toString.call(expected[key]) == '[object Array]') {\n                    var exp = expected.keyPath;\n                    var act = actual.keyPath;\n\n                    // IE10 can't handle keyPath sequences and stores them as a string.\n                    // The index will be unusable there, but let's still return true if\n                    // the keyPath sequence matches.\n                    if (typeof act == 'string') {\n                        return exp.toString() == act;\n                    }\n\n                    // Chrome/Opera stores keyPath squences as DOMStringList, Firefox\n                    // as Array\n                    if (!(typeof act.contains == 'function' || typeof act.indexOf == 'function')) {\n                        return false;\n                    }\n\n                    if (act.length !== exp.length) {\n                        return false;\n                    }\n\n                    for (var i = 0, m = exp.length; i < m; i++) {\n                        if (!( (act.contains && act.contains(exp[i])) || act.indexOf(exp[i] !== -1) )) {\n                            return false;\n                        }\n                    }\n                    return true;\n                }\n                return expected[key] == actual[key];\n            });\n            return complies;\n        },\n\n        /**********\n         * cursor *\n         **********/\n\n        /**\n         * Iterates over the store using the given options and calling onItem\n         * for each entry matching the options.\n         *\n         * @param {Function} onItem A callback to be called for each match\n         * @param {Object} [options] An object defining specific options\n         * @param {String} [options.index=null] A name of an IDBIndex to operate on\n         * @param {String} [options.order=ASC] The order in which to provide the\n         *  results, can be 'DESC' or 'ASC'\n         * @param {Boolean} [options.autoContinue=true] Whether to automatically\n         *  iterate the cursor to the next result\n         * @param {Boolean} [options.filterDuplicates=false] Whether to exclude\n         *  duplicate matches\n         * @param {IDBKeyRange} [options.keyRange=null] An IDBKeyRange to use\n         * @param {Boolean} [options.writeAccess=false] Whether grant write access\n         *  to the store in the onItem callback\n         * @param {Function} [options.onEnd=null] A callback to be called after\n         *  iteration has ended\n         * @param {Function} [options.onError=throw] A callback to be called\n         *  if an error occurred during the operation.\n         * @param {Number} [options.limit=Infinity] Limit the number of returned\n         *  results to this number\n         * @param {Number} [options.offset=0] Skip the provided number of results\n         *  in the resultset\n         * @param {Boolean} [options.allowItemRejection=false] Allows the onItem\n         * function to return a Boolean to accept or reject the current item\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        iterate: function (onItem, options) {\n            options = mixin({\n                index: null,\n                order: 'ASC',\n                autoContinue: true,\n                filterDuplicates: false,\n                keyRange: null,\n                writeAccess: false,\n                onEnd: null,\n                onError: defaultErrorHandler,\n                limit: Infinity,\n                offset: 0,\n                allowItemRejection: false\n            }, options || {});\n\n            var directionType = options.order.toLowerCase() == 'desc' ? 'PREV' : 'NEXT';\n            if (options.filterDuplicates) {\n                directionType += '_NO_DUPLICATE';\n            }\n\n            var hasSuccess = false;\n            var cursorTransaction = this.db.transaction([this.storeName], this.consts[options.writeAccess ? 'READ_WRITE' : 'READ_ONLY']);\n            var cursorTarget = cursorTransaction.objectStore(this.storeName);\n            if (options.index) {\n                cursorTarget = cursorTarget.index(options.index);\n            }\n            var recordCount = 0;\n\n            cursorTransaction.oncomplete = function () {\n                if (!hasSuccess) {\n                    options.onError(null);\n                    return;\n                }\n                if (options.onEnd) {\n                    options.onEnd();\n                } else {\n                    onItem(null);\n                }\n            };\n            cursorTransaction.onabort = options.onError;\n            cursorTransaction.onerror = options.onError;\n\n            var cursorRequest = cursorTarget.openCursor(options.keyRange, this.consts[directionType]);\n            cursorRequest.onerror = options.onError;\n            cursorRequest.onsuccess = function (event) {\n                var cursor = event.target.result;\n                if (cursor) {\n                    if (options.offset) {\n                        cursor.advance(options.offset);\n                        options.offset = 0;\n                    } else {\n                        var onItemReturn = onItem(cursor.value, cursor, cursorTransaction);\n                        if (!options.allowItemRejection || onItemReturn !== false) {\n                            recordCount++;\n                        }\n                        if (options.autoContinue) {\n                            if (recordCount + options.offset < options.limit) {\n                                cursor['continue']();\n                            } else {\n                                hasSuccess = true;\n                            }\n                        }\n                    }\n                } else {\n                    hasSuccess = true;\n                }\n            };\n\n            return cursorTransaction;\n        },\n\n        /**\n         * Runs a query against the store and passes an array containing matched\n         * objects to the success handler.\n         *\n         * @param {Function} onSuccess A callback to be called when the operation\n         *  was successful.\n         * @param {Object} [options] An object defining specific options\n         * @param {String} [options.index=null] A name of an IDBIndex to operate on\n         * @param {String} [options.order=ASC] The order in which to provide the\n         *  results, can be 'DESC' or 'ASC'\n         * @param {Boolean} [options.filterDuplicates=false] Whether to exclude\n         *  duplicate matches\n         * @param {IDBKeyRange} [options.keyRange=null] An IDBKeyRange to use\n         * @param {Function} [options.onError=throw] A callback to be called\n         *  if an error occurred during the operation.\n         * @param {Number} [options.limit=Infinity] Limit the number of returned\n         *  results to this number\n         * @param {Number} [options.offset=0] Skip the provided number of results\n         *  in the resultset\n         * @param {Function} [options.filter=null] A custom filter function to\n         *  apply to query resuts before returning. Must return `false` to reject\n         *  an item. Can be combined with keyRanges.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        query: function (onSuccess, options) {\n            var result = [],\n                processedItems = 0;\n            options = options || {};\n            options.autoContinue = true;\n            options.writeAccess = false;\n            options.allowItemRejection = !!options.filter;\n            options.onEnd = function () {\n                onSuccess(result, processedItems);\n            };\n            return this.iterate(function (item) {\n                processedItems++;\n                var accept = options.filter ? options.filter(item) : true;\n                if (accept !== false) {\n                    result.push(item);\n                }\n                return accept;\n            }, options);\n        },\n\n        /**\n         *\n         * Runs a query against the store, but only returns the number of matches\n         * instead of the matches itself.\n         *\n         * @param {Function} onSuccess A callback to be called if the opration\n         *  was successful.\n         * @param {Object} [options] An object defining specific options\n         * @param {String} [options.index=null] A name of an IDBIndex to operate on\n         * @param {IDBKeyRange} [options.keyRange=null] An IDBKeyRange to use\n         * @param {Function} [options.onError=throw] A callback to be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        count: function (onSuccess, options) {\n\n            options = mixin({\n                index: null,\n                keyRange: null\n            }, options || {});\n\n            var onError = options.onError || defaultErrorHandler;\n\n            var hasSuccess = false,\n                result = null;\n\n            var cursorTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n            cursorTransaction.oncomplete = function () {\n                var callback = hasSuccess ? onSuccess : onError;\n                callback(result);\n            };\n            cursorTransaction.onabort = onError;\n            cursorTransaction.onerror = onError;\n\n            var cursorTarget = cursorTransaction.objectStore(this.storeName);\n            if (options.index) {\n                cursorTarget = cursorTarget.index(options.index);\n            }\n            var countRequest = cursorTarget.count(options.keyRange);\n            countRequest.onsuccess = function (evt) {\n                hasSuccess = true;\n                result = evt.target.result;\n            };\n            countRequest.onError = onError;\n\n            return cursorTransaction;\n        },\n\n        /**************/\n        /* key ranges */\n        /**************/\n\n        /**\n         * Creates a key range using specified options. This key range can be\n         * handed over to the count() and iterate() methods.\n         *\n         * Note: You must provide at least one or both of \"lower\" or \"upper\" value.\n         *\n         * @param {Object} options The options for the key range to create\n         * @param {*} [options.lower] The lower bound\n         * @param {Boolean} [options.excludeLower] Whether to exclude the lower\n         *  bound passed in options.lower from the key range\n         * @param {*} [options.upper] The upper bound\n         * @param {Boolean} [options.excludeUpper] Whether to exclude the upper\n         *  bound passed in options.upper from the key range\n         * @param {*} [options.only] A single key value. Use this if you need a key\n         *  range that only includes one value for a key. Providing this\n         *  property invalidates all other properties.\n         * @return {IDBKeyRange} The IDBKeyRange representing the specified options\n         */\n        makeKeyRange: function (options) {\n            /*jshint onecase:true */\n            var keyRange,\n                hasLower = typeof options.lower != 'undefined',\n                hasUpper = typeof options.upper != 'undefined',\n                isOnly = typeof options.only != 'undefined';\n\n            switch (true) {\n                case isOnly:\n                    keyRange = this.keyRange.only(options.only);\n                    break;\n                case hasLower && hasUpper:\n                    keyRange = this.keyRange.bound(options.lower, options.upper, options.excludeLower, options.excludeUpper);\n                    break;\n                case hasLower:\n                    keyRange = this.keyRange.lowerBound(options.lower, options.excludeLower);\n                    break;\n                case hasUpper:\n                    keyRange = this.keyRange.upperBound(options.upper, options.excludeUpper);\n                    break;\n                default:\n                    throw new Error('Cannot create KeyRange. Provide one or both of \"lower\" or \"upper\" value, or an \"only\" value.');\n            }\n\n            return keyRange;\n\n        }\n\n    };\n\n    /** helpers **/\n    var empty = {};\n\n    function mixin (target, source) {\n        var name, s;\n        for (name in source) {\n            s = source[name];\n            if (s !== empty[name] && s !== target[name]) {\n                target[name] = s;\n            }\n        }\n        return target;\n    }\n\n    function hasVersionError(errorEvent) {\n        if ('error' in errorEvent.target) {\n            return errorEvent.target.error.name == 'VersionError';\n        } else if ('errorCode' in errorEvent.target) {\n            return errorEvent.target.errorCode == 12;\n        }\n        return false;\n    }\n\n    IDBStore.prototype = proto;\n    IDBStore.version = proto.version;\n\n    return IDBStore;\n\n}, this);\n","/*\n * Copyright (c) 2015 Samsung Electronics Co., Ltd. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* global window*/\n\n/**\n * Application common calculations module.\n * Provides methods that are necessary for navigation.\n *\n * @module app.common.calculations\n * @namespace app.common.calculations\n * @memberof app.common\n */\n\n// make sure that \"app\" namespace is created\nwindow.app = window.app || {};\n\n// strict mode wrapper function\n(function defineAppCommonCalculations(app) {\n    'use strict';\n\n    /**\n     * Earth radius constant.\n     *\n     * @private\n     * @const {number}\n     */\n    var EARTH_RADIUS = 6371000,\n\n    /**\n     * Meters unit constant.\n     *\n     * @private\n     * @const {string}\n     */\n    METERS_UNIT = 'm',\n\n    /**\n     * Kilometers unit constant.\n     *\n     * @private\n     * @const {string}\n     */\n    KILOMETERS_UNIT = 'km',\n\n    /**\n     * Calculations module reference.\n     *\n     * @memberof app.common.calculations\n     * @private\n     * @type {object}\n     */\n    calculations = null;\n\n    // create namespace for the module\n    app.common = app.common || {};\n    app.common.calculations = app.common.calculations || {};\n    calculations = app.common.calculations;\n\n    /**\n     * Converts the number value expressed in radians to degrees.\n     *\n     * @private\n     * @param {number} value\n     * @returns {number}\n     */\n    function toDegrees(value) {\n        return value * 180 / Math.PI;\n    }\n\n    /**\n     * Converts the number value expressed in degrees to radians.\n     *\n     * @private\n     * @param {number} value\n     * @returns {number}\n     */\n    function toRadians(value) {\n        return value * Math.PI / 180;\n    }\n\n    /**\n     * Formats distance value to be displayed in meters or kilometers.\n     *\n     * @private\n     * @param {number} distance Distance in meters.\n     * @returns {number}\n     */\n    function formatDistance(distance) {\n        if (distance >= 1000) {\n            distance /= 1000;\n        }\n        return distance.toFixed(0);\n    }\n\n    /**\n     * Formats unit value to represent meters or kilometers.\n     *\n     * @private\n     * @param {number} distance Distance in meters.\n     * @returns {string}\n     */\n    function formatUnit(distance) {\n        if (distance >= 1000) {\n            return KILOMETERS_UNIT;\n        }\n        return METERS_UNIT;\n    }\n\n    /**\n     * Calculates the angle based on the start and destination position.\n     *\n     * @memberof app.common.calculations\n     * @public\n     * @param {object} start\n     * @param {number} start.latitude\n     * @param {number} start.longitude\n     * @param {object} destination\n     * @param {number} destination.latitude\n     * @param {number} destination.longitude\n     * @returns {number}\n     */\n    calculations.calculateAngle = function calculateAngle(start, destination) {\n        var sLon = toRadians(start.longitude),\n            dLon = toRadians(destination.longitude),\n            sLat = toRadians(start.latitude),\n            dLat = toRadians(destination.latitude),\n            deltaLon = dLon - sLon;\n\n        if (deltaLon > Math.PI) {\n            deltaLon -= 2 * Math.PI;\n        } else if (deltaLon < -Math.PI) {\n            deltaLon += 2 * Math.PI;\n        }\n\n        return toDegrees((Math.atan2(\n            deltaLon,\n            Math.log(\n                Math.tan(dLat / 2 + Math.PI / 4) /\n                Math.tan(sLat / 2 + Math.PI / 4)\n            )\n        )));\n    };\n\n    /**\n     * Calculates the distance between two positions\n     * based on its coordinates.\n     *\n     * @memberof app.common.calculations\n     * @public\n     * @see http://www.sunearthtools.com/tools/distance.php\n     * @param {object} start\n     * @param {number} start.latitude\n     * @param {number} start.longitude\n     * @param {object} destination\n     * @param {number} destination.latitude\n     * @param {number} destination.longitude\n     * @returns {number}\n     */\n    calculations.calculateDistance =\n            function calculateDistance(start, destination) {\n        var sLon = toRadians(start.longitude),\n            dLon = toRadians(destination.longitude),\n            sLat = toRadians(start.latitude),\n            dLat = toRadians(destination.latitude),\n            distance = EARTH_RADIUS *\n                Math.acos(\n                    Math.sin(sLat) * Math.sin(dLat) +\n                    Math.cos(sLat) * Math.cos(dLat) * Math.cos(dLon - sLon)\n                );\n\n        return {\n            raw: distance,\n            formatted: formatDistance(distance),\n            unit: formatUnit(distance)\n        };\n    };\n\n    /**\n     * Obtains angle from rotation.\n     *\n     * @memberof app.common.calculations\n     * @param {number} value\n     * @returns {number}\n     */\n    calculations.angleFromRotation = function angleFromRotation(value) {\n        var angle = -value % 360;\n\n        if (angle < 0) {\n            angle += 360;\n        }\n\n        return angle;\n    };\n\n    /**\n     * Calculates angle for navigation path indicator.\n     *\n     * @memberof app.common.calculations\n     * @param {number} partialPath\n     * @param {number} totalPath\n     * @param {number} totalAngle\n     * @returns {number}\n     */\n    calculations.calculatePathAngle =\n        function calculatePathAngle(partialPath, totalPath, totalAngle) {\n\n        return partialPath * totalAngle / totalPath;\n    };\n\n})(window.app);\n","/*\n * Copyright (c) 2015 Samsung Electronics Co., Ltd. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* global window*/\n\n/**\n * Application common events module.\n * Provides common methods related to events triggering.\n *\n * @module app.common.events\n * @namespace app.common.events\n * @memberof app.common\n */\n\n// make sure that \"app\" namespace is created\nwindow.app = window.app || {};\n\n// strict mode wrapper function\n(function defineAppCommonEvents(app) {\n    'use strict';\n\n    /**\n     * Events module reference.\n     *\n     * @memberof app.common\n     * @private\n     * @type {object}\n     */\n    var events = null;\n\n    // create namespace for the module\n    app.common = app.common || {};\n    app.common.events = app.common.events || {};\n    events = app.common.events;\n\n    /**\n     * Dispatches an event.\n     *\n     * @memberof app.common.events\n     * @public\n     * @param {string} eventName Event name.\n     * @param {*} data Detailed data.\n     */\n    events.dispatchEvent = function dispatchEvent(eventName, data) {\n        var customEvent = new window.CustomEvent(eventName, {\n            detail: data\n        });\n\n        window.dispatchEvent(customEvent);\n    };\n\n})(window.app);\n","/*\n * Copyright (c) 2015 Samsung Electronics Co., Ltd. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*global console, window, tizen*/\n\n/**\n * Application battery model module.\n * It is responsible for obtaining information about device battery state.\n *\n * @module app.model.battery\n * @requires {@link app.common.events}\n * @namespace app.model.battery\n * @memberof app.model\n */\n\n// make sure that \"app\" namespace is created\nwindow.app = window.app || {};\n\n(function defineAppModelBattery(app) {\n    'use strict';\n\n        /**\n         * Battery model module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        var modelBattery = null,\n\n        /**\n         * Common events module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        commonEvents = app.common.events,\n\n        driver = null;\n\n    // create namespace for the module\n    app.model = app.model || {};\n    app.model.battery = app.model.battery || {};\n    modelBattery = app.model.battery;\n\n    /**\n     * Initializes the battery model module.\n     *\n     * @memberof app.model.battery\n     * @public\n     */\n    modelBattery.init = function init(driver) {\n        driver = driver;\n        driver.init();\n    };\n\n})(window.app);\n","/*\n * Copyright (c) 2015 Samsung Electronics Co., Ltd. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*global window, console, navigator, setTimeout*/\n\n/**\n * Application geolocation model module.\n * It is responsible for providing information about user location.\n *\n * @module app.model.geolocation\n * @requires {@link app.common.events}\n * @requires {@link app.common.calculations}\n * @namespace app.model.geolocation\n * @memberof app.model\n */\n\n// make sure that \"app\" namespace is created\nwindow.app = window.app || {};\n\n(function defineAppModelGeolocation(app) {\n    'use strict';\n\n    /**\n     * Geolocation checking interval (in milliseconds).\n     *\n     * @private\n     * @const {number}\n     */\n    var GEO_CHECKING_INTERVAL = 1000,\n\n        /**\n         * Geolocation checking counter.\n         * Defines max number of checking interval occurrences.\n         *\n         * @private\n         * @const {number}\n         */\n        GEO_CHECKING_COUNTER = 5,\n\n        /**\n         * Geolocation model module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        modelGeolocation = null,\n\n        /**\n         * Common events module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        commonEvents = app.common.events,\n\n        /**\n         * Common calculations module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        commonCalculations = app.common.calculations,\n\n        /**\n         * Geolocation API object.\n         *\n         * @private\n         * @type {object}\n         */\n        geolocation = null,\n\n        /**\n         * Current position data.\n         *\n         * @private\n         * @type {Position}\n         */\n        currentPosition = null,\n\n        /**\n         * Stores information about number of checking interval occurrences.\n         *\n         * @private\n         * @type {number}\n         */\n        checkingCounter = 0;\n\n    // create namespace for the module\n    app.model = app.model || {};\n    app.model.geolocation = app.model.geolocation || {};\n    modelGeolocation = app.model.geolocation;\n\n    /**\n     * Checks if the current position is equal to the one given as parameter.\n     * Returns true if it is, false otherwise.\n     *\n     * @param {Position} position\n     * @returns {boolean}\n     */\n    function isPositionEqual(position) {\n        if (currentPosition &&\n            (currentPosition.coords.latitude === position.coords.latitude ||\n            currentPosition.coords.longitude === position.coords.longitude)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Performs action on get current position success.\n     *\n     * @private\n     * @param {Position} position\n     * @fires model.geolocation.current.position.changed\n     * @fires model.geolocation.current.destination.reached\n     * @fires model.geolocation.position.available\n     */\n    function onGetCurrentPositionSuccess(position) {\n        if (!isPositionEqual(position)) {\n            currentPosition = position;\n            commonEvents.dispatchEvent(\n                'model.geolocation.current.position.changed'\n            );\n        }\n        commonEvents.dispatchEvent('model.geolocation.position.available');\n        checkingCounter = 0;\n        //setTimeout(getGeoPosition, GEO_CHECKING_INTERVAL);\n    }\n\n    /**\n     * Performs action on get current position error.\n     *\n     * @private\n     * @fires model.geolocation.position.unavailable\n     * @fires model.geolocation.position.lost\n     */\n    function onGetCurrentPositionError(error) {\n        commonEvents.dispatchEvent('model.geolocation.position.unavailable');\n        checkingCounter += 1;\n        if (checkingCounter === GEO_CHECKING_COUNTER) {\n            commonEvents.dispatchEvent('model.geolocation.position.lost');\n        }\n\n        console.warn(error);\n        //setTimeout(getGeoPosition, GEO_CHECKING_INTERVAL);\n    }\n\n    /**\n     * Uses Geolocation API in order to obtain information\n     * about changes of the current position.\n     *\n     * @private\n     */\n    function getGeoPosition() {\n        try {\n            geolocation.watchPosition(\n                onGetCurrentPositionSuccess,\n                onGetCurrentPositionError,\n                {\n                    maximumAge :GEO_CHECKING_INTERVAL,\n                    enableHighAccuracy: true,\n                    timeout: GEO_CHECKING_INTERVAL\n                }\n            );\n        } catch (error) {\n            console.warn('Couldn\\'t get geolocation position.', error);\n        }\n    }\n\n    /**\n     * Returns current position.\n     *\n     * @memberof app.model.geolocation\n     * @public\n     * @returns {object}\n     */\n    modelGeolocation.getCurrentPosition = function getCurrentPosition() {\n        return currentPosition;\n    };\n\n\n    /**\n     * Initializes the geolocation model module.\n     *\n     * @memberof app.model.geolocation\n     * @public\n     * @fires model.geolocation.available\n     * @fires model.geolocation.unavailable\n     */\n    modelGeolocation.init = function init() {\n        if (navigator.geolocation) {\n            geolocation = navigator.geolocation;\n            commonEvents.dispatchEvent('model.geolocation.available');\n            getGeoPosition();\n        } else {\n            commonEvents.dispatchEvent('model.geolocation.unavailable');\n        }\n    };\n\n})(window.app);\n","/*\n * Copyright (c) 2015 Samsung Electronics Co., Ltd. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*global window, console, tizen*/\n\n/**\n * Application network model module.\n * It is responsible for providing information about user location.\n *\n * @module app.model.network\n * @requires {@link app.common.events}\n * @namespace app.model.network\n * @memberof app.model\n */\n\n// make sure that \"app\" namespace is created\nwindow.app = window.app || {};\n\n(function defineAppModelNetwork(app) {\n    'use strict';\n\n        /**\n         * Common events module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        var commonEvents = app.common.events,\n\n        modelNetwork = null;\n\n    // create namespace for the module\n    app.model = app.model || {};\n    app.model.network = app.model.network || {};\n    modelNetwork = app.model.network;\n    modelNetwork.driver = null;\n\n\n    /**\n     * Checks available network type.\n     *\n     * @private\n     */\n    function checkNetworkType() {\n        return modelNetwork.driver.checkNetworkType();\n    }\n\n    /**\n     * Checks whether the network type has different value than 'NONE'.\n     *\n     * @memberof app.model.network\n     * @public\n     * @returns {boolean}\n     */\n    modelNetwork.isNetworkAvailable = function isNetworkAvailable() {\n        return modelNetwork.driver.isNetworkAvailable();\n    };\n\n    /**\n     * Returns available network type;\n     *\n     * @memberof app.model.network\n     * @public\n     * @returns {string}\n     */\n    modelNetwork.getNetworkType = function getNetworkType() {\n        return modelNetwork.driver.getNetworkType();\n    };\n\n    /**\n     * Initializes the network model module.\n     *\n     * @memberof app.model.network\n     * @public\n     */\n    modelNetwork.init = function init(driver) {\n        modelNetwork.driver = driver;\n        modelNetwork.driver.init();\n    };\n\n})(window.app);\n","/*global window, console, geolocation, setTimeout*/\n\n/**\n * Application sync model module.\n * It is responsible for syncing workouts with the server.\n *\n * @module app.model.geolocation\n * @requires {@link app.common.events}\n * @requires {@link app.common.calculations}\n * @namespace app.model.geolocation\n * @memberof app.model\n */\n\n// make sure that \"app\" namespace is created\nwindow.app = window.app || {};\n\n(function defineAppModelSync(app) {\n    'use strict';\n\n        /**\n         * Workout model module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        var modelSync = null,\n\n        /**\n         * Geolocation model module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        modelWorkout = app.model.workout,\n\n        /**\n         * Common events module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        commonEvents = app.common.events,\n\n        modelNetwork = app.model.network,\n\n        syncUrls = {\n            login: '',\n            upload: ''\n        };\n\n    // create namespace for the module\n    app.model = app.model || {};\n    app.model.sync = app.model.sync || {};\n    modelSync = app.model.sync;\n\n\n\n    /**\n     * Registers event listeners.\n     *\n     * @private\n     */\n    function bindEvents() {\n        window.addEventListener(\n            'model.workout.getlist.successful',\n            function(e){\n                e.stopPropagation();\n                var workouts = e.detail;\n                uploadWorkouts(workouts);\n            },\n            'model.workout.getlist.failed',\n            function(e){\n                e.stopPropagation();\n                commonEvents.dispatchEvent('model.sync.upload.failed');\n            }\n        );\n    }\n\n    function getToken(){\n        return localStorage.getItem('token');\n    }\n\n    function createAuthHeader(){\n        var token = getToken() || '',\n            header = {\n                key: 'Authorization',\n                value: 'Bearer ' + token,\n            };\n\n        return token.length ? header : false;\n    }\n\n    /**\n     * Initializes the workout model module.\n     *\n     * @memberof app.model.workout\n     * @public\n     * @fires model.sync.login.successful\n     * @fires model.sync.login.failed\n     * @param {string} loginUrl\n     * @param {string} uploadUrl\n     */\n    modelSync.init = function init(loginUrl, uploadUrl) {\n        syncUrls.login = loginUrl;\n        syncUrls.upload = uploadUrl;\n\n        bindEvents();\n    };\n\n    modelSync.login = function login(email, password) {\n        var client = new XMLHttpRequest(),\n            localStorage = window.localStorage;\n\n        /* Check the response status */\n        client.onreadystatechange = function() {\n            if (client.readyState == 4) {\n                if (client.status == 200) {\n\n                    localStorage.setItem('token', JSON.parse(client.response));\n                    commonEvents.dispatchEvent('model.sync.login.successful', { token: client.response });\n                }\n                else {\n                    commonEvents.dispatchEvent('model.sync.login.failed');\n                }\n            }\n        };\n\n    \tclient.onerror = function(e) {\n\t\t\tconsole.log(e);\n        };\n\n        var data = \"email=\" + email + \"&\" + \"password=\" + password;\n\n        client.open('POST', syncUrls.login, true);\n        client.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        client.send(data); /* Send to server */\n\n    };\n\n    modelSync.sync = function(){\n        // Disabled until network availability is fixed for cordova\n        // if( modelNetwork.isNetworkAvailable() ){\n            modelWorkout.getItemsToSync();\n        // }\n\n    }\n\n    function uploadWorkouts(workouts){\n        var client = new XMLHttpRequest(),\n            authHeaders = createAuthHeader();\n\n            if(authHeaders === false){\n                commonEvents.dispatchEvent('model.sync.login.required');\n               return false;\n            }\n\n            /* Check the response status */\n            client.onreadystatechange = function() {\n                if (client.readyState == 4){\n                    console.log('Response: ' + client.status);\n                    switch(client.status){\n                        case 200:\n                            modelWorkout.clear();\n                            commonEvents.dispatchEvent('model.sync.upload.successful', true);\n                            break;\n                        case 401:\n                            commonEvents.dispatchEvent('model.sync.login.required');\n                            break;\n                        default:\n                            commonEvents.dispatchEvent('model.sync.upload.failed');\n                            break;\n                    }\n                }\n            };\n\n            client.open('POST', syncUrls.upload, true);\n\n            var payload = JSON.stringify({ data: workouts });\n\n            client.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n            client.setRequestHeader(\"Accept\", \"application/json\");\n            client.setRequestHeader(authHeaders.key, authHeaders.value);\n            console.log('Sending data to the server');\n            client.send(payload); /* Send to server */\n    }\n\n})(window.app);\n","import {CyclingWorkout} from \"../workout/app.workout.cycling_workout\";\nimport {RunningWorkout} from \"../workout/app.workout.running_workout\";\nimport {WORKOUT_TYPE_CYCLING, WORKOUT_TYPE_RUNNING} from \"../workout/app.workout.base_workout\";\nlet IDBStore = require( \"../../../node_modules/idb-wrapper/idbstore\");\n\nrequire('../common/app.common.calculations');\n/*global window, console, geolocation, setTimeout*/\n\n/**\n * Application geolocation model module.\n * It is responsible for providing information about user location.\n *\n * @module app.model.geolocation\n * @requires {@link app.common.events}\n * @requires {@link app.common.calculations}\n * @namespace app.model.geolocation\n * @memberof app.model\n */\n\n// make sure that \"app\" namespace is created\nwindow.app = window.app || {};\n\n(function defineAppModelWorkout(app) {\n    'use strict';\n\n    /**\n     * Geolocation checking interval (in milliseconds).\n     *\n     * @private\n     * @const {number}\n     */\n\n        /**\n         * Workout model module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        var modelWorkout = null,\n\n        /**\n         * Geolocation model module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        modelGeolocation = app.model.geolocation,\n\n        /**\n         * Common events module reference.\n         *\n         * @private\n         * @type {object}\n         */\n        commonEvents = app.common.events,\n\n        /**\n         *\n         * @type {HardwareDriver}\n         */\n        hardwareDriver = null,\n\n        /**\n         * Workout data.\n         *\n         * @private\n         * @type {BaseWorkout}\n         */\n        workout = null,\n\n        workoutDB = null,\n\n        isDBready = false;\n\n    // create namespace for the module\n    app.model = app.model || {};\n    app.model.workout = app.model.workout || {};\n    modelWorkout = app.model.workout;\n\n    modelWorkout.WORKOUT_TYPE_RUNNING = 1;\n    modelWorkout.WORKOUT_TYPE_CYCLING = 2;\n\n    modelWorkout.WORKOUT_STATUS_UNSAVED = 0;\n    modelWorkout.WORKOUT_STATUS_SAVED = 1;\n    modelWorkout.WORKOUT_STATUS_SYNCED = 2;\n\n\n    /**\n     * Handles model.geolocation.position.available event.\n     *\n     * @private\n     * @fires model.workout.updateui\n     */\n    function updateUI(){\n        if(workout){\n            commonEvents.dispatchEvent('model.workout.updateui', workout);\n        }\n    }\n\n    /**\n     * Handles model.geolocation.position.available event.\n     *\n     * @private\n     */\n    function onModelGeolocationPositionAvailable() {\n        var currentPosition = modelGeolocation.getCurrentPosition();\n\n        if(workout && workout.isActive()){\n            var point = new Point(\n                0,\n                currentPosition.coords.latitude,\n                currentPosition.coords.longitude,\n                0,\n                currentPosition.coords.altitude || 0,\n                currentPosition.timestamp\n            );\n\n            workout.addPoint(point);\n            updateUI();\n        }\n    }\n\n    /**\n     * Registers event listeners.\n     *\n     * @private\n     */\n    function bindEvents() {\n        window.addEventListener(\n            'model.geolocation.position.available',\n            onModelGeolocationPositionAvailable\n        );\n    }\n\n    function initDatabase() {\n        workoutDB = new IDBStore({\n            dbVersion: 1,\n            storeName: 'workouts',\n            keyPath: 'id',\n            autoIncrement: true,\n            onStoreReady: function(){\n                commonEvents.dispatchEvent('model.workout.dbready');\n                isDBready = true;\n\n            }\n        });\n    }\n    /**\n     * Initializes the workout model module.\n     *\n     * @memberof app.model.workout\n     * @public\n     * @fires model.geolocation.available\n     * @fires model.geolocation.unavailable\n     */\n    modelWorkout.init = function init(driver) {\n        hardwareDriver = driver;\n        hardwareDriver.init();\n        bindEvents();\n        initDatabase();\n    };\n\n    modelWorkout.start = function start(type) {\n        switch(type){\n            case WORKOUT_TYPE_CYCLING:\n                workout = new CyclingWorkout();\n                break;\n            case WORKOUT_TYPE_RUNNING:\n                workout = new RunningWorkout();\n                break;\n        }\n\n        workout.start();\n        updateUI();\n        hardwareDriver.backgroundRunEnable();\n    };\n\n    /**\n     *\n     * @fires model.workout.paused\n     */\n    modelWorkout.togglePause = function togglePause(){\n        if(!workout.isActive()){\n            hardwareDriver.backgroundRunEnable();\n            commonEvents.dispatchEvent('model.workout.resumed');\n            workout.resume();\n        }\n        else{\n            commonEvents.dispatchEvent('model.workout.paused');\n            workout.pause();\n            hardwareDriver.backgroundRunDisable();\n        }\n    };\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    modelWorkout.isHeartRateAvailable = function(){\n        return hardwareDriver.isHeartRateAvailable();\n    };\n\n    modelWorkout.save = function save(){\n        workout.save();\n\n        var onsuccess = function(id){\n            console.log('Successfully inserted! insertId is: ' + id);\n            commonEvents.dispatchEvent('model.workout.save.successful', true);\n        };\n        var onerror = function(error){\n            console.log('Workout save failed!', error);\n            commonEvents.dispatchEvent('model.workout.save.failed');\n        };\n\n        workoutDB.put(workout.toObject(), onsuccess, onerror);\n\n        return false;\n    };\n\n    modelWorkout.clear = function clear(){\n        var onsuccess = function () {\n            console.log('Database celared');\n            commonEvents.dispatchEvent('model.workout.clear.successful');\n        };\n        var onerror = function (error) {\n            console.log('Database clear failed!', error);\n            commonEvents.dispatchEvent('model.workout.clear.failed');\n        };\n\n        workoutDB.clear(onsuccess, onerror);\n    };\n\n    modelWorkout.getList = function getList( status ) {\n        var onsuccess = function (data) {\n            data = data.filter(function(item){\n                return item.status == status;\n            });\n\n            commonEvents.dispatchEvent('model.workout.getlist.successful', data);\n        };\n        var onerror = function (error) {\n            console.log('Workout save failed!', error);\n            commonEvents.dispatchEvent('model.workout.getlist.failed');\n        };\n\n        workoutDB.getAll(onsuccess, onerror);\n    };\n\n    modelWorkout.getItemsToSync = function getItemsToSync( ) {\n        return modelWorkout.getList( modelWorkout.WORKOUT_STATUS_SAVED );\n    };\n\n    modelWorkout.getWorkout = function getWorkout() {\n        return workout;\n    };\n\n})(window.app);\n","require('../app.drivers.battery')\n\n;(function(root){\n    var BatteryDriverAndroid = function(){\n    };\n\n    var proto = new BatteryDriver();\n\n    proto.bind = function(){\n        var _this = this;\n\n        document.addEventListener(\"deviceready\", function(){\n            window.addEventListener(\"batterystatus\", onBatteryStatus, false);\n\n            function onBatteryStatus(status) {\n                _this.level = status.level;\n            }\n\n            window.addEventListener(\"batterylow\", onBatteryLow, false);\n\n            function onBatteryLow(status) {\n                _this.commonEvents.dispatchEvent('model.battery.low');\n            }\n        }, false);\n    }\n\n    BatteryDriverAndroid.prototype = proto;\n    root.BatteryDriverAndroid = BatteryDriverAndroid;\n})(window);\n","require('../app.drivers.hardware')\n\n;(function (root) {\n    var HardwareDriverAndroid = function () {\n        this.commonEvents = window.app.common.events;\n    };\n\n    var proto = new HardwareDriver();\n\n    proto.bind = function () {\n        cordova.plugins.backgroundMode.on('activate', function () {\n            console.log('activate background mode');\n            cordova.plugins.backgroundMode.disableWebViewOptimizations();\n        });\n    };\n    proto.isHeartRateAvailable = function () {\n        return false;\n    };\n    proto.backgroundRunEnable = function () {\n        cordova.plugins.backgroundMode.enable();\n    };\n    proto.backgroundRunDisable = function () {\n        cordova.plugins.backgroundMode.disable();\n    };\n    proto.exit = function(){\n        try {\n            navigator.app.exitApp();\n        } catch (error) {\n            console.warn('Application exit failed.', error.message);\n        }\n    };\n\n    HardwareDriverAndroid.prototype = proto;\n    root.HardwareDriverAndroid = HardwareDriverAndroid;\n})(window);\n","require('../app.drivers.network')\n\n;(function(root){\n    var NetworkDriverAndroid = function(){\n\n    };\n\n    var proto = new NetworkDriver();\n\n    proto.bind = function(){\n        var _this = this;\n\n        document.addEventListener(\"offline\",\n        function(){\n            _this.onNetworkTypeChange()\n        }, false);\n        document.addEventListener(\"online\",\n        function(){\n            _this.onNetworkTypeChange()\n        }, false);\n    };\n\n    proto.isNetworkAvailable = function () {\n        return navigator.connection.type !== Connection.NONE;\n    };\n\n    proto.onNetworkTypeChange = function(network) {\n        this.networkType = navigator.connection.type;\n        this.commonEvents.dispatchEvent('model.network.type.changed');\n    };\n\n    proto.onGetNetworkTypeSuccess = function(network) {\n        this.networkType = navigator.connection.type;\n        this.commonEvents.dispatchEvent('model.network.initialized');\n    };\n\n    NetworkDriverAndroid.prototype = proto;\n    root.NetworkDriverAndroid = NetworkDriverAndroid;\n})(window);\n","require('./android/app.drivers.android.battery');\nrequire('./android/app.drivers.android.network');\nrequire('./android/app.drivers.android.hardware');\nrequire('./tizen/app.drivers.tizen.battery');\nrequire('./tizen/app.drivers.tizen.network');\nrequire('./tizen/app.drivers.tizen.hardware');\n\n;(function(root){\n    var DriverFactory = function(platform){\n        this.platform = platform;\n    };\n\n    DriverFactory.prototype = {\n        buildNetworkDriver: function(){\n            var networkDriver = new NetworkDriver();\n\n            switch(this.platform){\n                case Platform.PLATFORM_TIZEN:\n                    networkDriver = new NetworkDriverTizen();\n                    break;\n                case Platform.PLATFORM_ANDROID:\n                    networkDriver = new NetworkDriverAndroid();\n                    break;\n            }\n\n            return networkDriver;\n        },\n        buildBatteryDriver: function(){\n            var batteryDriver = new BatteryDriver();\n\n            switch(this.platform){\n                case Platform.PLATFORM_TIZEN:\n                    batteryDriver = new BatteryDriverTizen();\n                    break;\n                case Platform.PLATFORM_ANDROID:\n                    batteryDriver = new BatteryDriverAndroid();\n                    break;\n            }\n\n            return batteryDriver;\n        },\n        buildHardwareDriver: function(){\n            var hardwareDriver = new HardwareDriver();\n\n            switch(this.platform){\n                case Platform.PLATFORM_TIZEN:\n                    hardwareDriver = new HardwareDriverTizen();\n                    break;\n                case Platform.PLATFORM_ANDROID:\n                    hardwareDriver = new HardwareDriverAndroid();\n                    break;\n            }\n\n            return hardwareDriver;\n        }\n    };\n\n    root.DriverFactory = DriverFactory;\n})(window);\n",";(function(root){\n    var BatteryDriver = function(){\n        this.level = null;\n        this.commonEvents = window.app.common.events;\n    };\n\n    BatteryDriver.prototype = {\n        init: function(){\n            this.bind();\n        },\n        bind: function(){\n\n        }\n    };\n\n    root.BatteryDriver = BatteryDriver;\n})(window);\n",";(function(root){\n    var HardwareDriver = function(){\n        this.commonEvents = window.app.common.events;\n    };\n\n    HardwareDriver.prototype = {\n        init: function(){\n            this.bind();\n        },\n        bind: function(){\n\n        },\n        /**\n         *\n         * @returns {boolean}\n         */\n        isHeartRateAvailable: function () {\n            return false;\n        },\n        backgroundRunEnable: function () {\n\n        },\n        backgroundRunDisable: function () {\n\n        },\n        exit: function () {\n\n        }\n    };\n\n    root.HardwareDriver = HardwareDriver;\n})(window);\n",";(function(root){\n    var NetworkDriver = function(){\n        this.commonEvents = window.app.common.events;\n        this.networkType = 'NONE';\n    };\n\n    var NETWORKS = ['2G', '2.5G', '3G', '4G', 'WIFI', 'ETHERNET', 'UNKNOWN'];\n\n    NetworkDriver.prototype = {\n        init: function(){\n            this.bind();\n        },\n        bind: function(){\n\n        },\n        isNetworkAvailable: function () {\n            return NETWORKS.indexOf(this.networkType) !== -1;\n        },\n        getNetworkType: function () {\n            return this.networkType;\n        }\n    };\n\n    root.NetworkDriver = NetworkDriver;\n})(window);\n",";(function(root){\n    var Platform = {\n        PLATFORM_TIZEN: 'tizen',\n        PLATFORM_ANDROID: 'android',\n        PLATFORM_BROWSER: 'browser',\n\n        get: function(){\n            var platform = this.PLATFORM_BROWSER;\n\n            if( typeof tizen === 'object' && typeof tizen.systeminfo === 'object'){\n                platform = this.PLATFORM_TIZEN;\n            }\n            else if(typeof device === 'object' && device.platform === 'Android'){\n                platform = this.PLATFORM_ANDROID;\n            }\n\n            return platform;\n        }\n    };\n\n    root.Platform = Platform;\n})(window);\n","require('../app.drivers.battery')\n\n;(function(root){\n    var BatteryDriverTizen = function(){\n\n    };\n\n    var proto = new BatteryDriver();\n\n    proto.bind = function(){\n        var _this = this,\n            systeminfo = null;\n\n        if (typeof tizen === 'object' && typeof tizen.systeminfo === 'object') {\n            var systeminfo = tizen.systeminfo;\n        } else {\n            console.warn('tizen.systeminfo not available');\n        }\n        try {\n            systeminfo.addPropertyValueChangeListener(\n                'BATTERY',\n                function change(battery) {\n                    _this.level = battery.level;\n\n                    if (!battery.isCharging && battery.level < _this.LOW_BATTERY) {\n                        _this.commonEvents.dispatchEvent('model.battery.low');\n                    }\n                },\n                null,\n                function errorCallback(error) {\n                    console.warn('Battery state listener was not set.', error);\n                }\n            );\n        } catch (error) {\n            console.warn('Battery state listener was not set.', error);\n        }\n    }\n\n    BatteryDriverTizen.prototype = proto;\n    root.BatteryDriverTizen = BatteryDriverTizen;\n})(window);\n","require('../app.drivers.hardware')\n\n;(function(root){\n    var HardwareDriverTizen = function(){\n        this.commonEvents = window.app.common.events;\n    };\n\n    var proto = new HardwareDriver();\n\n        proto.bind = function(){\n\n        };\n        proto.isHeartRateAvailable = function () {\n            return true;\n        };\n        proto.backgroundRunEnable = function () {\n            tizen.power.request(\"CPU\", \"CPU_AWAKE\");\n            tizen.power.request('SCREEN', 'SCREEN_NORMAL');\n        };\n        proto.backgroundRunDisable = function () {\n            tizen.power.release(\"CPU\");\n            tizen.power.release('SCREEN');\n        };\n        proto.exit = function(){\n            try {\n                tizen.application.getCurrentApplication().exit();\n            } catch (error) {\n                console.warn('Application exit failed.', error.message);\n            }\n        };\n\n    HardwareDriverTizen.prototype = proto;\n    root.HardwareDriverTizen = HardwareDriverTizen;\n})(window);\n","require('../app.drivers.network')\n\n;(function(root){\n    var NetworkDriverTizen = function(){\n\n    };\n\n    var proto = new NetworkDriver();\n\n    proto.bind = function(){\n        var _this = this,\n            systeminfo = null;\n\n        if (typeof tizen === 'object' && typeof tizen.systeminfo === 'object') {\n            var systeminfo = tizen.systeminfo;\n        } else {\n            console.warn('tizen.systeminfo not available');\n        }\n\n        try {\n            systeminfo.getPropertyValue(\n                'NETWORK',\n                function(network){\n                    _this.onGetNetworkTypeSuccess(network);\n                },\n                function onGetPropertyValueError(error) {\n                    console.warn('Couldn\\'t get network type value.', error);\n                }\n            );\n        } catch (error) {\n            console.warn('Couldn\\'t get network type value.', error);\n        }\n\n        try {\n            systeminfo.addPropertyValueChangeListener(\n                'NETWORK',\n            function(network){\n                _this.onNetworkTypeChange(network);\n            }\n        );\n        } catch (error) {\n            console.warn('Network change listener was not set.', error);\n        }\n\n    };\n\n    proto.onNetworkTypeChange = function(network) {\n        this.networkType = network.networkType;\n        this.commonEvents.dispatchEvent('model.network.type.changed');\n    };\n\n    proto.onGetNetworkTypeSuccess = function(network) {\n        this.networkType = network.networkType;\n        this.commonEvents.dispatchEvent('model.network.initialized');\n    };\n\n    NetworkDriverTizen.prototype = proto;\n    root.NetworkDriverTizen = NetworkDriverTizen;\n})(window);\n","require('../common/app.common.events');\n\nrequire('./drivers/app.drivers.platform');\nrequire('./drivers/app.driver.factory');\n\nrequire('./app.model.battery');\nrequire('./app.model.network');\nrequire('./app.model.geolocation');\nrequire('./app.model.workout');\nrequire('./app.model.sync');","require('./app.workout.point');\nrequire('../common/app.common.calculations');\n\nvar WORKOUT_STATUS_UNSAVED = 0,\n    WORKOUT_STATUS_SAVED = 1,\n\n    WORKOUT_STATE_STOPPED = 0,\n    WORKOUT_STATE_RUNNING = 1,\n    WORKOUT_STATE_PAUSED = 2,\n    WORKOUT_STATE_AUTOPAUSED = 3;\n\nexport const WORKOUT_TYPE_RUNNING = 1;\nexport const WORKOUT_TYPE_CYCLING = 2;\n\n/**\n * @class BaseWorkout\n * @constructor\n */\nclass BaseWorkout {\n\n    constructor() {\n        this.type = null;\n        this.status = WORKOUT_STATUS_UNSAVED;\n\n        /** @member {Point[]} **/\n        this._points = [];\n        this._distance = 0;\n\n        this._segmentIndex = 0;\n        this._state = WORKOUT_STATE_STOPPED;\n    }\n\n    init() {\n    }\n\n    start() {\n        this._state = WORKOUT_STATE_RUNNING;\n    }\n\n    pause() {\n        this._state = WORKOUT_STATE_PAUSED;\n        this._segmentIndex++;\n    }\n\n    save() {\n        this.status = WORKOUT_STATUS_SAVED;\n    }\n\n    resume() {\n        this._state = WORKOUT_STATE_RUNNING;\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    isActive() {\n        return this._state === WORKOUT_STATE_RUNNING;\n    }\n\n    /**\n     *\n     * @param {Point} point\n     */\n    addPoint(point) {\n        point.segment_index = this._segmentIndex;\n\n        this._points.push(point);\n\n        let points = this._getCalculationPoints();\n\n        if(points){\n            this.calculate(points.pointA, points.pointB);\n        }\n\n    }\n\n    /**\n     *\n     * @private\n     *\n     * @returns {?{pointA: Point, pointB: Point}}\n     */\n    _getCalculationPoints(){\n        let calculationPoints = null;\n\n        if(this._points.length >= 2){\n            calculationPoints =  {\n                pointA: this._points[this._points.length - 2],\n                pointB: this._points[this._points.length - 1]\n            }\n        }\n\n        return calculationPoints;\n\n    }\n\n    /**\n     *\n     * @param {Point} pointA\n     * @param {Point} pointB\n     * @returns {number}\n     */\n    _calculateDistance(pointA, pointB) {\n        let distance = window.app.common.calculations.calculateDistance(\n            {latitude: pointA.lat, longitude: pointA.lng},\n            {latitude: pointB.lat, longitude: pointB.lng}\n        );\n\n        this._distance += distance.raw;\n\n        return distance.raw;\n    }\n\n    /**\n     * Calculate the params such as distance, speed, etc\n     *\n     * @param {Point} pointA\n     * @param {Point} pointB\n     */\n    calculate(pointA, pointB){\n\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    get speedUnit(){\n        return 'km/h';\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    get speedLabel(){\n        return 'Speed'\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    get speed(){\n        return 0;\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    get distance(){\n        return this._distance / 1000;\n    }\n\n    /**\n     *\n     * @param {number} distance\n     */\n    set distance(distance){\n        this._distance = distance;\n    }\n\n    /**\n     *\n     * @returns {Point[]}\n     */\n    get points(){\n        return this._points;\n    }\n\n    /**\n     *\n     * @returns {int|number}\n     */\n    get heartRate(){\n        return this._points.length ? this._points[this._points.length - 1].heart_rate : 0;\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    get altitude(){\n        return this._points.length ? this._points[this._points.length - 1].elevation : 0;\n    }\n\n    /**\n     *\n     * @returns {{type: int, status: int, points: Point[]}}\n     */\n    toObject() {\n        return {\n            type: this.type,\n            status: this.status,\n            points: this._points\n        }\n    }\n};\n\nexport {BaseWorkout};\n","import {BaseWorkout, WORKOUT_TYPE_CYCLING} from \"./app.workout.base_workout\";\n\n// Milliseconds per meter to kilometers per hour\nconst MPS_TO_KMH = 3600; // hour = 3600 * 1000 milliseconds / kilometer = 1000 meters\n\nclass CyclingWorkout extends BaseWorkout {\n    constructor() {\n        super();\n\n        this.type = WORKOUT_TYPE_CYCLING;\n\n        this._speed = 0;\n    }\n\n    /**\n     *\n     * @param {Point} pointA\n     * @param {Point} pointB\n     * @returns {number}\n     */\n    _calculateSpeed(pointA, pointB) {\n        let distance = this._calculateDistance(pointA, pointB),\n            timeDiff = pointB.time - pointA.time;\n\n        if( distance > 1 && timeDiff > 0){\n            this._speed = timeDiff ? MPS_TO_KMH * distance / timeDiff : 0;\n        }\n\n        return this._speed;\n    }\n\n    /**\n     * Calculate the params such as distance, speed, etc\n     *\n     * @param {Point} pointA\n     * @param {Point} pointB\n     */\n    calculate(pointA, pointB){\n        this._calculateSpeed(pointA, pointB);\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    get speed(){\n        return this._speed;\n    }\n}\n\nexport {CyclingWorkout}",";(function(root){\n    /**\n     *\n     * @param {int} segmentIndex\n     * @param {number} lat\n     * @param {number} lng\n     * @param {int} heartRate\n     * @param {number} elevation\n     * @param {int} time\n     * @constructor\n     */\n    var Point = function(segmentIndex, lat, lng, heartRate, elevation, time){\n        this.segment_index = segmentIndex;\n        this.lat = lat;\n        this.lng = lng;\n        this.heart_rate = heartRate;\n        this.elevation = elevation;\n        this.time = time;\n    };\n\n    Point.prototype = {\n        init: function(){\n\n        }\n    };\n\n    root.Point = Point;\n})(window);\n","import {BaseWorkout, WORKOUT_TYPE_RUNNING} from \"./app.workout.base_workout\";\n\n// Milliseconds per meter to minutes per kilometer\nconst MSEC_PER_METER_TO_MIN_PER_KM = 60;// Minute = 60 * 1000  millisecond / kilometer = 1000 meters\n\n\nclass RunningWorkout extends BaseWorkout {\n    constructor() {\n        super();\n\n        this.type = WORKOUT_TYPE_RUNNING;\n\n        this._pace = 0;\n    }\n\n    /**\n     *\n     * @param {Point} pointA\n     * @param {Point} pointB\n     * @returns {number}\n     */\n    _calculatePace(pointA, pointB) {\n        let distance = this._calculateDistance(pointA, pointB),\n            timeDiff = pointB.time - pointA.time;\n\n        if (distance > 1 && timeDiff > 0) {\n            this._pace = (timeDiff / distance) / MSEC_PER_METER_TO_MIN_PER_KM;\n        }\n\n        return this._pace;\n    }\n\n    /**\n     * Calculate the params such as distance, speed, etc\n     *\n     * @param {Point} pointA\n     * @param {Point} pointB\n     */\n    calculate(pointA, pointB) {\n        this._calculatePace(pointA, pointB);\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    get speedUnit() {\n        return 'min/km';\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    get speedLabel() {\n        return 'Pace'\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    get speed() {\n        return this._pace;\n    }\n}\n\nexport {RunningWorkout};","describe(\"Sync\", function () {\n    var app = window.app || {};\n\n    var env = jasmine.getEnv();\n    env.randomizeTests(false);\n\n    app.model.sync.init(\n        'http://tracy.test/api/login',\n        'http://tracy.test/api/workouts'\n    );\n\n    beforeEach(function (done) {\n        var xmlhttp = new XMLHttpRequest(),\n            _this = this;\n\n        xmlhttp.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                _this.waypoints = JSON.parse(this.responseText);\n                done();\n            }\n        };\n\n        xmlhttp.open(\"GET\", \"tests/data/455.json\", true);\n        xmlhttp.send();\n\n        this.modelWorkout = app.model.workout;\n        this.modelGeolocation = app.model.geolocation;\n        this.modelSync = app.model.sync;\n\n        var platform = Platform.get(),\n            driverFactory = new DriverFactory(platform);\n\n        this.modelWorkout.init(driverFactory.buildHardwareDriver(platform));\n\n        window.addEventListener(\n            'model.workout.dbready',\n            function(e){\n                _this.modelWorkout.clear();\n            });\n\n        this.runWorkout = function(doneCallback){\n            navigator.geolocation.delay = 1;\n            navigator.geolocation.repeat = false;\n            navigator.geolocation.waypoints = this.waypoints;\n\n            this.modelGeolocation.init();\n            this.modelWorkout.start(this.modelWorkout.WORKOUT_TYPE_RUNNING);\n\n            setTimeout( function(){\n                    _this.modelWorkout.togglePause();\n                    doneCallback();\n                },\n                300);\n        };\n\n    });\n\n    it('should login', function (done) {\n        window.addEventListener(\n            'model.sync.login.successful',\n            function(e){\n                e.stopPropagation();\n                expect(e.detail.hasOwnProperty('token')).toBeTruthy();\n                expect(e.detail.token.length > 0).toBeTruthy();\n                done();\n            });\n\n        this.modelSync.login( 'demo@email.com', '123123' );\n    });\n\n    it('should login with token and upload workouts', function (done) {\n        var _this = this;\n\n\n        window.addEventListener(\n            'model.sync.upload.successful',\n            function(e){\n                e.stopPropagation();\n                expect(e.detail).toBeTruthy();\n                done();\n            });\n\n        this.runWorkout(function(){\n            _this.modelWorkout.save();\n            _this.modelSync.sync();\n        });\n    });\n\n});\n","describe(\"Workout model\", function () {\n    var app = window.app || {};\n\n    var env = jasmine.getEnv();\n    env.randomizeTests(false);\n\n    beforeEach(function (done) {\n        var xmlhttp = new XMLHttpRequest(),\n            _this = this;\n\n        xmlhttp.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                _this.waypoints = JSON.parse(this.responseText);\n                done();\n            }\n        };\n\n        xmlhttp.open(\"GET\", \"tests/data/455.json\", true);\n        xmlhttp.send();\n\n        this.modelWorkout = app.model.workout;\n        this.modelGeolocation = app.model.geolocation;\n\n        var platform = Platform.get(),\n            driverFactory = new DriverFactory(platform);\n\n        this.modelWorkout.init(driverFactory.buildHardwareDriver(platform));\n\n        window.addEventListener(\n            'model.workout.dbready',\n            function(e){\n                _this.modelWorkout.clear();\n            });\n\n        this.runWorkout = function(doneCallback){\n            navigator.geolocation.delay = 1;\n            navigator.geolocation.repeat = false;\n            navigator.geolocation.waypoints = this.waypoints;\n\n            this.modelGeolocation.init();\n            this.modelWorkout.start(this.modelWorkout.WORKOUT_TYPE_RUNNING);\n\n            setTimeout( function(){\n                    _this.modelWorkout.togglePause();\n                    doneCallback();\n                },\n                300);\n        };\n\n    });\n\n    it('should start and pause workout', function (done) {\n        var _this = this;\n\n        expect(typeof this.modelWorkout === 'object').toBeTruthy();\n\n        var pauseListener = function(e){\n            var workout = _this.modelWorkout.getWorkout();\n            expect(workout.points.length).toEqual(6);\n            window.removeEventListener('model.workout.paused', pauseListener);\n        };\n\n        window.addEventListener(\n            'model.workout.paused',\n            pauseListener\n        );\n\n        this.runWorkout(function(){\n            _this.modelWorkout.togglePause();\n            done();\n        });\n    });\n\n    it('should save the workout', function (done) {\n        var _this = this;\n\n        window.addEventListener(\n            'model.workout.save.successful',\n            function(e){\n                e.stopPropagation();\n                expect(e.detail).toBeTruthy();\n                done();\n            },\n            'model.workout.save.failed',\n            function(e){\n                e.stopPropagation();\n                expect(e.detail).toBeTruthy();\n                done();\n            }\n        );\n\n        this.runWorkout(function(){\n            _this.modelWorkout.save();\n        });\n    });\n\n    it('should load saved workouts', function (done) {\n        var _this = this;\n\n        window.addEventListener(\n            'model.workout.getlist.successful',\n            function(e){\n                e.stopPropagation();\n                expect(e.detail.length == 1).toBeTruthy();\n                expect(e.detail[0].status == _this.modelWorkout.WORKOUT_STATUS_SAVED).toBeTruthy();\n                done();\n            },\n            'model.workout.getlist.failed',\n            function(e){\n                e.stopPropagation();\n                done();\n            }\n        );\n\n        window.addEventListener(\n            'model.workout.save.successful',\n            function(e){\n                e.stopPropagation();\n                _this.modelWorkout.getList(_this.modelWorkout.WORKOUT_STATUS_SAVED);\n            },\n            'model.workout.save.failed',\n            function(e){\n                e.stopPropagation();\n                expect(e.detail).toBeTruthy();\n                done();\n            }\n        );\n\n        this.runWorkout(function(){\n            // _this.modelSync.sync = function(){};\n            _this.modelWorkout.save();\n        });\n    });\n\n    //it('should start the workout and update UI', function (done) {\n    //    var _this = this;\n    //\n    //    navigator.geolocation.delay = 1000;\n    //    navigator.geolocation.repeat = false;\n    //    navigator.geolocation.waypoints = this.waypoints;\n    //\n    //    this.modelGeolocation.init();\n    //    expect(typeof this.modelWorkout === 'object').toBeTruthy();\n    //    this.modelWorkout.start(this.modelWorkout.WORKOUT_TYPE_RUNNING);\n    //\n    //    window.addEventListener(\n    //        'model.workout.updateui',\n    //        function(e){\n    //            e.stopPropagation();\n    //            var data = e.detail;\n    //            console.log(data);\n    //        }\n    //    );\n    //\n    //    setTimeout( function(){\n    //            done();\n    //        },\n    //        4000);\n    //});\n\n});\n","describe(\"DriverFactory\", function () {\n    it('should create drivers for tizen', function () {\n\n        var platform = Platform.PLATFORM_TIZEN,\n            driverFactory = new DriverFactory(platform),\n            batteryDriver = driverFactory.buildBatteryDriver(platform),\n            networkDriver = driverFactory.buildNetworkDriver(platform),\n            hardwareDriver = driverFactory.buildHardwareDriver(platform);\n\n            expect( batteryDriver instanceof BatteryDriverTizen ).toBeTruthy();\n            expect( networkDriver instanceof NetworkDriverTizen ).toBeTruthy();\n            expect( hardwareDriver instanceof HardwareDriverTizen ).toBeTruthy();\n    });\n\n    it('should create drivers for android', function () {\n\n        var platform = Platform.PLATFORM_ANDROID,\n            driverFactory = new DriverFactory(platform),\n            batteryDriver = driverFactory.buildBatteryDriver(platform),\n            networkDriver = driverFactory.buildNetworkDriver(platform),\n            hardwareDriver = driverFactory.buildHardwareDriver(platform);\n\n            expect( batteryDriver instanceof BatteryDriverAndroid ).toBeTruthy();\n            expect( networkDriver instanceof NetworkDriverAndroid ).toBeTruthy();\n            expect( hardwareDriver instanceof HardwareDriverAndroid ).toBeTruthy();\n    });\n});\n","import {CyclingWorkout} from '../../../../src/js/workout/app.workout.cycling_workout.js';\nimport {RunningWorkout} from \"../../../../src/js/workout/app.workout.running_workout\";\n\ndescribe(\"Workout\", function () {\n    it('should calculate distance', function () {\n        let timeA = 1551018055000,\n            timeB = timeA + 20000, // +20 sec\n            pointA = new Point(\n            0,\n            45.8849114,\n            19.2545559,\n            0,\n            0,\n                timeA\n            ),\n\n            pointB = new Point(\n                0,\n                45.8856601,\n                19.2553514,\n                0,\n                0,\n                timeB\n            ),\n\n            expectedDistance = 103.54782304590353, // meters\n            workout = new CyclingWorkout(),\n            distance = workout._calculateDistance(pointA, pointB);\n\n        expect(distance).toEqual(expectedDistance);\n    });\n\n    it('should calculate speed', function () {\n        let timeA = 1551018055000,\n            timeB = timeA + 20000, // +20 sec\n            pointA = new Point(\n            0,\n            45.8849114,\n            19.2545559,\n            0,\n            0,\n            timeA\n            ),\n\n            pointB = new Point(\n                0,\n                45.8856601,\n                19.2553514,\n                0,\n                0,\n                timeB\n            ),\n\n            expectedSpeed = 18.638608148262635,\n            workout = new CyclingWorkout(),\n            speed = workout._calculateSpeed(pointA, pointB);\n\n        expect(speed).toEqual(expectedSpeed);\n    });\n\n    it('should calculate pace', function () {\n        let timeA = 1551018055000,\n            timeB = timeA + 40000, // +40 sec\n            pointA = new Point(\n            0,\n            45.8849114,\n            19.2545559,\n            0,\n            0,\n            timeA\n            ),\n\n            pointB = new Point(\n                0,\n                45.8856601,\n                19.2553514,\n                0,\n                0,\n                timeB\n            ),\n\n            expectedPace = 6.438248985409653,\n            workout = new RunningWorkout(),\n            pace = workout._calculatePace(pointA, pointB);\n\n        expect(pace).toEqual(expectedPace);\n    });\n\n    it('should add points and calculate distance and pace', function () {\n        let timeA = 1551018055000,\n            timeB = timeA + 40000, // +40 sec\n            pointA = new Point(\n                0,\n                45.8849114,\n                19.2545559,\n                0,\n                0,\n                timeA\n            ),\n\n            pointB = new Point(\n                0,\n                45.8856601,\n                19.2553514,\n                0,\n                0,\n                timeB\n            ),\n\n            expectedPace = 6.438248985409653,\n            expectedDistance = 103.54782304590353 / 1000, // km\n            workout = new RunningWorkout();\n\n            workout.addPoint(pointA);\n            workout.addPoint(pointB);\n\n        expect(workout.speed).toEqual(expectedPace);\n        expect(workout.distance).toEqual(expectedDistance);\n    });\n\n    it('should add points and calculate distance and speed', function () {\n        let timeA = 1551018055000,\n            timeB = timeA + 20000, // +20 sec\n            pointA = new Point(\n                0,\n                45.8849114,\n                19.2545559,\n                0,\n                0,\n                timeA\n            ),\n\n            pointB = new Point(\n                0,\n                45.8856601,\n                19.2553514,\n                0,\n                0,\n                timeB\n            ),\n\n            expectedSpeed = 18.638608148262635, // km/h\n            expectedDistance = 103.54782304590353 / 1000, // km\n            workout = new CyclingWorkout();\n\n        workout.addPoint(pointA);\n        workout.addPoint(pointB);\n\n        expect(workout.speed).toEqual(expectedSpeed);\n        expect(workout.distance).toEqual(expectedDistance);\n    });\n});\n","/*\n * Copyright (c) 2015 Samsung Electronics Co., Ltd. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*global document, tizen, console, window*/\n\n/**\n * Main application module.\n * Provides a namespace for other application modules.\n * Handles application life cycle.\n *\n * @module app\n * @requires {@link app.model.battery}\n * @requires {@link app.ui}\n * @namespace app\n */\n\nrequire('../js/model/models');\n\nrequire('./spec/WorkoutModelSpec');\nrequire('./spec/SyncModelSpec');\nrequire('./spec/unit/DriverFactorySpec');\nrequire('./spec/unit/WorkoutSpec');"],"sourceRoot":""}